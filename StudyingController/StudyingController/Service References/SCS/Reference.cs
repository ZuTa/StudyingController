//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudyingController.SCS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Session", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
    [System.SerializableAttribute()]
    public partial class Session : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StudyingController.SCS.SystemUserDTO UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((this.SessionIDField.Equals(value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StudyingController.SCS.SystemUserDTO User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemUserDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class SystemUserDTO : StudyingController.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StudyingController.SCS.UserInformationDTO UserInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StudyingController.SCS.UserRoles UserRoleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StudyingController.SCS.UserInformationDTO UserInformation {
            get {
                return this.UserInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInformationField, value) != true)) {
                    this.UserInformationField = value;
                    this.RaisePropertyChanged("UserInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StudyingController.SCS.UserRoles UserRole {
            get {
                return this.UserRoleField;
            }
            set {
                if ((this.UserRoleField.Equals(value) != true)) {
                    this.UserRoleField = value;
                    this.RaisePropertyChanged("UserRole");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntityDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StudyingController.SCS.UserInformationDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StudyingController.SCS.NamedEntityDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StudyingController.SCS.InstituteDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StudyingController.SCS.FacultyDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StudyingController.SCS.CathedraDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StudyingController.SCS.SystemUserDTO))]
    public partial class BaseEntityDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInformationDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class UserInformationDTO : StudyingController.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NamedEntityDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StudyingController.SCS.InstituteDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StudyingController.SCS.FacultyDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StudyingController.SCS.CathedraDTO))]
    public partial class NamedEntityDTO : StudyingController.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstituteDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class InstituteDTO : StudyingController.SCS.NamedEntityDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacultyDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class FacultyDTO : StudyingController.SCS.NamedEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InstituteIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InstituteID {
            get {
                return this.InstituteIDField;
            }
            set {
                if ((this.InstituteIDField.Equals(value) != true)) {
                    this.InstituteIDField = value;
                    this.RaisePropertyChanged("InstituteID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CathedraDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class CathedraDTO : StudyingController.SCS.NamedEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacultyIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacultyID {
            get {
                return this.FacultyIDField;
            }
            set {
                if ((this.FacultyIDField.Equals(value) != true)) {
                    this.FacultyIDField = value;
                    this.RaisePropertyChanged("FacultyID");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRoles", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    public enum UserRoles : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainAdmin = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstituteAdmin = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FacultyAdmin = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainSecretary = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstituteSecretary = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FacultySecretary = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Teacher = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Student = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
    [System.SerializableAttribute()]
    public partial class ControllerServiceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SCS.IControllerService")]
    public interface IControllerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/Login", ReplyAction="http://tempuri.org/IControllerService/LoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(StudyingController.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/LoginControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        StudyingController.SCS.Session Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IControllerService/Login", ReplyAction="http://tempuri.org/IControllerService/LoginResponse")]
        System.IAsyncResult BeginLogin(string login, string password, System.AsyncCallback callback, object asyncState);
        
        StudyingController.SCS.Session EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetInstitutes", ReplyAction="http://tempuri.org/IControllerService/GetInstitutesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(StudyingController.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetInstitutesControllerServiceExceptionFaul" +
            "t", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        System.Collections.Generic.List<StudyingController.SCS.InstituteDTO> GetInstitutes(StudyingController.SCS.Session session);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IControllerService/GetInstitutes", ReplyAction="http://tempuri.org/IControllerService/GetInstitutesResponse")]
        System.IAsyncResult BeginGetInstitutes(StudyingController.SCS.Session session, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<StudyingController.SCS.InstituteDTO> EndGetInstitutes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetFaculties", ReplyAction="http://tempuri.org/IControllerService/GetFacultiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(StudyingController.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetFacultiesControllerServiceExceptionFault" +
            "", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        System.Collections.Generic.List<StudyingController.SCS.FacultyDTO> GetFaculties(StudyingController.SCS.Session session, System.Nullable<int> instituteID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IControllerService/GetFaculties", ReplyAction="http://tempuri.org/IControllerService/GetFacultiesResponse")]
        System.IAsyncResult BeginGetFaculties(StudyingController.SCS.Session session, System.Nullable<int> instituteID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<StudyingController.SCS.FacultyDTO> EndGetFaculties(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetCathedras", ReplyAction="http://tempuri.org/IControllerService/GetCathedrasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(StudyingController.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetCathedrasControllerServiceExceptionFault" +
            "", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        System.Collections.Generic.List<StudyingController.SCS.CathedraDTO> GetCathedras(StudyingController.SCS.Session session, int facultyID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IControllerService/GetCathedras", ReplyAction="http://tempuri.org/IControllerService/GetCathedrasResponse")]
        System.IAsyncResult BeginGetCathedras(StudyingController.SCS.Session session, int facultyID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<StudyingController.SCS.CathedraDTO> EndGetCathedras(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IControllerServiceChannel : StudyingController.SCS.IControllerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public StudyingController.SCS.Session Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((StudyingController.SCS.Session)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInstitutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInstitutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<StudyingController.SCS.InstituteDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<StudyingController.SCS.InstituteDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFacultiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFacultiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<StudyingController.SCS.FacultyDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<StudyingController.SCS.FacultyDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCathedrasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCathedrasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<StudyingController.SCS.CathedraDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<StudyingController.SCS.CathedraDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ControllerServiceClient : System.ServiceModel.ClientBase<StudyingController.SCS.IControllerService>, StudyingController.SCS.IControllerService {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInstitutesDelegate;
        
        private EndOperationDelegate onEndGetInstitutesDelegate;
        
        private System.Threading.SendOrPostCallback onGetInstitutesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFacultiesDelegate;
        
        private EndOperationDelegate onEndGetFacultiesDelegate;
        
        private System.Threading.SendOrPostCallback onGetFacultiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCathedrasDelegate;
        
        private EndOperationDelegate onEndGetCathedrasDelegate;
        
        private System.Threading.SendOrPostCallback onGetCathedrasCompletedDelegate;
        
        public ControllerServiceClient() {
        }
        
        public ControllerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ControllerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ControllerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ControllerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<GetInstitutesCompletedEventArgs> GetInstitutesCompleted;
        
        public event System.EventHandler<GetFacultiesCompletedEventArgs> GetFacultiesCompleted;
        
        public event System.EventHandler<GetCathedrasCompletedEventArgs> GetCathedrasCompleted;
        
        public StudyingController.SCS.Session Login(string login1, string password) {
            return base.Channel.Login(login1, password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogin(string login, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(login, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public StudyingController.SCS.Session EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return this.BeginLogin(login, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            StudyingController.SCS.Session retVal = this.EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string login, string password) {
            this.LoginAsync(login, password, null);
        }
        
        public void LoginAsync(string login, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        login,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<StudyingController.SCS.InstituteDTO> GetInstitutes(StudyingController.SCS.Session session) {
            return base.Channel.GetInstitutes(session);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetInstitutes(StudyingController.SCS.Session session, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInstitutes(session, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<StudyingController.SCS.InstituteDTO> EndGetInstitutes(System.IAsyncResult result) {
            return base.Channel.EndGetInstitutes(result);
        }
        
        private System.IAsyncResult OnBeginGetInstitutes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            StudyingController.SCS.Session session = ((StudyingController.SCS.Session)(inValues[0]));
            return this.BeginGetInstitutes(session, callback, asyncState);
        }
        
        private object[] OnEndGetInstitutes(System.IAsyncResult result) {
            System.Collections.Generic.List<StudyingController.SCS.InstituteDTO> retVal = this.EndGetInstitutes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInstitutesCompleted(object state) {
            if ((this.GetInstitutesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInstitutesCompleted(this, new GetInstitutesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInstitutesAsync(StudyingController.SCS.Session session) {
            this.GetInstitutesAsync(session, null);
        }
        
        public void GetInstitutesAsync(StudyingController.SCS.Session session, object userState) {
            if ((this.onBeginGetInstitutesDelegate == null)) {
                this.onBeginGetInstitutesDelegate = new BeginOperationDelegate(this.OnBeginGetInstitutes);
            }
            if ((this.onEndGetInstitutesDelegate == null)) {
                this.onEndGetInstitutesDelegate = new EndOperationDelegate(this.OnEndGetInstitutes);
            }
            if ((this.onGetInstitutesCompletedDelegate == null)) {
                this.onGetInstitutesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInstitutesCompleted);
            }
            base.InvokeAsync(this.onBeginGetInstitutesDelegate, new object[] {
                        session}, this.onEndGetInstitutesDelegate, this.onGetInstitutesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<StudyingController.SCS.FacultyDTO> GetFaculties(StudyingController.SCS.Session session, System.Nullable<int> instituteID) {
            return base.Channel.GetFaculties(session, instituteID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFaculties(StudyingController.SCS.Session session, System.Nullable<int> instituteID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFaculties(session, instituteID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<StudyingController.SCS.FacultyDTO> EndGetFaculties(System.IAsyncResult result) {
            return base.Channel.EndGetFaculties(result);
        }
        
        private System.IAsyncResult OnBeginGetFaculties(object[] inValues, System.AsyncCallback callback, object asyncState) {
            StudyingController.SCS.Session session = ((StudyingController.SCS.Session)(inValues[0]));
            System.Nullable<int> instituteID = ((System.Nullable<int>)(inValues[1]));
            return this.BeginGetFaculties(session, instituteID, callback, asyncState);
        }
        
        private object[] OnEndGetFaculties(System.IAsyncResult result) {
            System.Collections.Generic.List<StudyingController.SCS.FacultyDTO> retVal = this.EndGetFaculties(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFacultiesCompleted(object state) {
            if ((this.GetFacultiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFacultiesCompleted(this, new GetFacultiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFacultiesAsync(StudyingController.SCS.Session session, System.Nullable<int> instituteID) {
            this.GetFacultiesAsync(session, instituteID, null);
        }
        
        public void GetFacultiesAsync(StudyingController.SCS.Session session, System.Nullable<int> instituteID, object userState) {
            if ((this.onBeginGetFacultiesDelegate == null)) {
                this.onBeginGetFacultiesDelegate = new BeginOperationDelegate(this.OnBeginGetFaculties);
            }
            if ((this.onEndGetFacultiesDelegate == null)) {
                this.onEndGetFacultiesDelegate = new EndOperationDelegate(this.OnEndGetFaculties);
            }
            if ((this.onGetFacultiesCompletedDelegate == null)) {
                this.onGetFacultiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFacultiesCompleted);
            }
            base.InvokeAsync(this.onBeginGetFacultiesDelegate, new object[] {
                        session,
                        instituteID}, this.onEndGetFacultiesDelegate, this.onGetFacultiesCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<StudyingController.SCS.CathedraDTO> GetCathedras(StudyingController.SCS.Session session, int facultyID) {
            return base.Channel.GetCathedras(session, facultyID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCathedras(StudyingController.SCS.Session session, int facultyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCathedras(session, facultyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<StudyingController.SCS.CathedraDTO> EndGetCathedras(System.IAsyncResult result) {
            return base.Channel.EndGetCathedras(result);
        }
        
        private System.IAsyncResult OnBeginGetCathedras(object[] inValues, System.AsyncCallback callback, object asyncState) {
            StudyingController.SCS.Session session = ((StudyingController.SCS.Session)(inValues[0]));
            int facultyID = ((int)(inValues[1]));
            return this.BeginGetCathedras(session, facultyID, callback, asyncState);
        }
        
        private object[] OnEndGetCathedras(System.IAsyncResult result) {
            System.Collections.Generic.List<StudyingController.SCS.CathedraDTO> retVal = this.EndGetCathedras(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCathedrasCompleted(object state) {
            if ((this.GetCathedrasCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCathedrasCompleted(this, new GetCathedrasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCathedrasAsync(StudyingController.SCS.Session session, int facultyID) {
            this.GetCathedrasAsync(session, facultyID, null);
        }
        
        public void GetCathedrasAsync(StudyingController.SCS.Session session, int facultyID, object userState) {
            if ((this.onBeginGetCathedrasDelegate == null)) {
                this.onBeginGetCathedrasDelegate = new BeginOperationDelegate(this.OnBeginGetCathedras);
            }
            if ((this.onEndGetCathedrasDelegate == null)) {
                this.onEndGetCathedrasDelegate = new EndOperationDelegate(this.OnEndGetCathedras);
            }
            if ((this.onGetCathedrasCompletedDelegate == null)) {
                this.onGetCathedrasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCathedrasCompleted);
            }
            base.InvokeAsync(this.onBeginGetCathedrasDelegate, new object[] {
                        session,
                        facultyID}, this.onEndGetCathedrasDelegate, this.onGetCathedrasCompletedDelegate, userState);
        }
    }
}
