<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:converters="clr-namespace:StudyingController.Converters"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <converters:BoolToVisibilityConverter x:Key="B2V"/>
    
    <Style TargetType="{x:Type FrameworkElement}" x:Key="DefaultTextStyle">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultTextStyle}" x:Key="TextBlockStyle">
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextStyle}" x:Key="TextBoxStyle">
        
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DefaultTextStyle}" x:Key="ComboBoxStyle">
        <Setter Property="IsReadOnly" Value="True"/>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}" x:Key="ValidationTextBoxToolTipStyle">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <Binding Path="(Validation.Errors).CurrentItem.ErrorContent" RelativeSource="{x:Static RelativeSource.Self}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxStyle}" x:Key="ValidationComboBoxToolTipStyle">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <Binding Path="(Validation.Errors).CurrentItem.ErrorContent" RelativeSource="{x:Static RelativeSource.Self}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="MenuButtonStyle">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="EditableButtonStyle">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" Padding="1" BorderThickness="1" CornerRadius="2">
                        <ContentPresenter Content="{TemplateBinding Property=ContentControl.Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DodgerBlue" />
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush>
                                        <SolidColorBrush.Color>
                                            <Color A="200" R="194" G="224" B="255" />
                                        </SolidColorBrush.Color>
                                    </SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DodgerBlue" />
                            <Setter TargetName="border" Property="Background" Value="LightSkyBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>

    