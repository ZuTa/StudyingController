//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Faculty_Institute", "Institute", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudyingControllerEntityModel.Institute), "Faculty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Faculty), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_FacultyAdmin_Faculty", "Faculty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Faculty), "FacultyAdmin", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.FacultyAdmin), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_UserInformation_SystemUser", "SystemUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.SystemUser), "UserInformation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudyingControllerEntityModel.UserInformation), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_InstituteAdmin_Institute", "Institute", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Institute), "InstituteAdmin", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.InstituteAdmin), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_FacultySecretary_Faculty", "Faculty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Faculty), "FacultySecretary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.FacultySecretary), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_InstituteSecretary_Institute", "Institute", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Institute), "InstituteSecretary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.InstituteSecretary), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Cathedra_Faculty", "Faculty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Faculty), "Cathedra", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Cathedra), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Teacher_Cathedra", "Cathedra", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Cathedra), "Teacher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Teacher), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Group_Cathedra", "Cathedra", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Cathedra), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Group), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Specialization_Faculty", "Faculty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Faculty), "Specialization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Specialization), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Group_Specialization", "Specialization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Specialization), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Group), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Student_Group", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Group), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Student), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Subject_Cathedra", "Cathedra", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Cathedra), "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Subject), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Lecture_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Subject), "Lecture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Lecture), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Lecture_Teacher", "Teacher", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Teacher), "Lecture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Lecture), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Practice_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Subject), "Practice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Practice), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Practice_Teacher_Practice", "Practice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Practice), "Practice_Teacher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.PracticeTeacher), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Practice_Teacher_Teacher", "Teacher", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Teacher), "Practice_Teacher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.PracticeTeacher), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "Practice_Teacher_Student", "Practice_Teacher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.PracticeTeacher), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Student))]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_LectureControl_Lecture", "Lecture", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Lecture), "LectureControl", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.LectureControl), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_PracticeControl_Practice", "Practice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Practice), "PracticeControl", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.PracticeControl), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "Lecture_Group", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Group), "Lecture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Lecture))]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Mark_Student", "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Student), "Mark", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Mark), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "PracticeControlPracticeControlMark", "PracticeControl", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.PracticeControl), "PracticeControlMark", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.PracticeControlMark), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "LectureControlLectureControlMark", "LectureControl", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.LectureControl), "LectureControlMark", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.LectureControlMark), true)]
[assembly: EdmRelationshipAttribute("UniversityDBModel", "FK_Attachment_Teacher", "Teacher", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudyingControllerEntityModel.Teacher), "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudyingControllerEntityModel.Attachment), true)]

#endregion

namespace StudyingControllerEntityModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class UniversityEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new UniversityEntities object using the connection string found in the 'UniversityEntities' section of the application configuration file.
        /// </summary>
        public UniversityEntities() : base("name=UniversityEntities", "UniversityEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UniversityEntities object.
        /// </summary>
        public UniversityEntities(string connectionString) : base(connectionString, "UniversityEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UniversityEntities object.
        /// </summary>
        public UniversityEntities(EntityConnection connection) : base(connection, "UniversityEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemUser> SystemUsers
        {
            get
            {
                if ((_SystemUsers == null))
                {
                    _SystemUsers = base.CreateObjectSet<SystemUser>("SystemUsers");
                }
                return _SystemUsers;
            }
        }
        private ObjectSet<SystemUser> _SystemUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Faculty> Faculties
        {
            get
            {
                if ((_Faculties == null))
                {
                    _Faculties = base.CreateObjectSet<Faculty>("Faculties");
                }
                return _Faculties;
            }
        }
        private ObjectSet<Faculty> _Faculties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Institute> Institutes
        {
            get
            {
                if ((_Institutes == null))
                {
                    _Institutes = base.CreateObjectSet<Institute>("Institutes");
                }
                return _Institutes;
            }
        }
        private ObjectSet<Institute> _Institutes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserInformation> UserInformations
        {
            get
            {
                if ((_UserInformations == null))
                {
                    _UserInformations = base.CreateObjectSet<UserInformation>("UserInformations");
                }
                return _UserInformations;
            }
        }
        private ObjectSet<UserInformation> _UserInformations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cathedra> Cathedras
        {
            get
            {
                if ((_Cathedras == null))
                {
                    _Cathedras = base.CreateObjectSet<Cathedra>("Cathedras");
                }
                return _Cathedras;
            }
        }
        private ObjectSet<Cathedra> _Cathedras;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Specialization> Specializations
        {
            get
            {
                if ((_Specializations == null))
                {
                    _Specializations = base.CreateObjectSet<Specialization>("Specializations");
                }
                return _Specializations;
            }
        }
        private ObjectSet<Specialization> _Specializations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lecture> Lectures
        {
            get
            {
                if ((_Lectures == null))
                {
                    _Lectures = base.CreateObjectSet<Lecture>("Lectures");
                }
                return _Lectures;
            }
        }
        private ObjectSet<Lecture> _Lectures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Practice> Practices
        {
            get
            {
                if ((_Practices == null))
                {
                    _Practices = base.CreateObjectSet<Practice>("Practices");
                }
                return _Practices;
            }
        }
        private ObjectSet<Practice> _Practices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subject> Subjects
        {
            get
            {
                if ((_Subjects == null))
                {
                    _Subjects = base.CreateObjectSet<Subject>("Subjects");
                }
                return _Subjects;
            }
        }
        private ObjectSet<Subject> _Subjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PracticeTeacher> PracticeTeachers
        {
            get
            {
                if ((_PracticeTeachers == null))
                {
                    _PracticeTeachers = base.CreateObjectSet<PracticeTeacher>("PracticeTeachers");
                }
                return _PracticeTeachers;
            }
        }
        private ObjectSet<PracticeTeacher> _PracticeTeachers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Control> Controls
        {
            get
            {
                if ((_Controls == null))
                {
                    _Controls = base.CreateObjectSet<Control>("Controls");
                }
                return _Controls;
            }
        }
        private ObjectSet<Control> _Controls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Mark> Marks
        {
            get
            {
                if ((_Marks == null))
                {
                    _Marks = base.CreateObjectSet<Mark>("Marks");
                }
                return _Marks;
            }
        }
        private ObjectSet<Mark> _Marks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StudyRange> StudyRanges
        {
            get
            {
                if ((_StudyRanges == null))
                {
                    _StudyRanges = base.CreateObjectSet<StudyRange>("StudyRanges");
                }
                return _StudyRanges;
            }
        }
        private ObjectSet<StudyRange> _StudyRanges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attachment> Attachments
        {
            get
            {
                if ((_Attachments == null))
                {
                    _Attachments = base.CreateObjectSet<Attachment>("Attachments");
                }
                return _Attachments;
            }
        }
        private ObjectSet<Attachment> _Attachments;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemUsers(SystemUser systemUser)
        {
            base.AddObject("SystemUsers", systemUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Faculties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFaculties(Faculty faculty)
        {
            base.AddObject("Faculties", faculty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Institutes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitutes(Institute institute)
        {
            base.AddObject("Institutes", institute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserInformations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserInformations(UserInformation userInformation)
        {
            base.AddObject("UserInformations", userInformation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cathedras EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCathedras(Cathedra cathedra)
        {
            base.AddObject("Cathedras", cathedra);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Specializations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecializations(Specialization specialization)
        {
            base.AddObject("Specializations", specialization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lectures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLectures(Lecture lecture)
        {
            base.AddObject("Lectures", lecture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Practices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPractices(Practice practice)
        {
            base.AddObject("Practices", practice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjects(Subject subject)
        {
            base.AddObject("Subjects", subject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PracticeTeachers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPracticeTeachers(PracticeTeacher practiceTeacher)
        {
            base.AddObject("PracticeTeachers", practiceTeacher);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Controls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToControls(Control control)
        {
            base.AddObject("Controls", control);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Marks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarks(Mark mark)
        {
            base.AddObject("Marks", mark);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StudyRanges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudyRanges(StudyRange studyRange)
        {
            base.AddObject("StudyRanges", studyRange);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachments(Attachment attachment)
        {
            base.AddObject("Attachments", attachment);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="Attachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attachment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="teacherID">Initial value of the TeacherID property.</param>
        public static Attachment CreateAttachment(global::System.Int32 id, global::System.String name, global::System.DateTime dateAdded, global::System.Byte[] data, global::System.Int32 teacherID)
        {
            Attachment attachment = new Attachment();
            attachment.ID = id;
            attachment.Name = name;
            attachment.DateAdded = dateAdded;
            attachment.Data = data;
            attachment.TeacherID = teacherID;
            return attachment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeacherID
        {
            get
            {
                return _TeacherID;
            }
            set
            {
                OnTeacherIDChanging(value);
                ReportPropertyChanging("TeacherID");
                _TeacherID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeacherID");
                OnTeacherIDChanged();
            }
        }
        private global::System.Int32 _TeacherID;
        partial void OnTeacherIDChanging(global::System.Int32 value);
        partial void OnTeacherIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Attachment_Teacher", "Teacher")]
        public Teacher Teacher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("UniversityDBModel.FK_Attachment_Teacher", "Teacher").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("UniversityDBModel.FK_Attachment_Teacher", "Teacher").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teacher> TeacherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("UniversityDBModel.FK_Attachment_Teacher", "Teacher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teacher>("UniversityDBModel.FK_Attachment_Teacher", "Teacher", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="Cathedra")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cathedra : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cathedra object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="facultyID">Initial value of the FacultyID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Cathedra CreateCathedra(global::System.Int32 id, global::System.Int32 facultyID, global::System.String name)
        {
            Cathedra cathedra = new Cathedra();
            cathedra.ID = id;
            cathedra.FacultyID = facultyID;
            cathedra.Name = name;
            return cathedra;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacultyID
        {
            get
            {
                return _FacultyID;
            }
            set
            {
                OnFacultyIDChanging(value);
                ReportPropertyChanging("FacultyID");
                _FacultyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyID");
                OnFacultyIDChanged();
            }
        }
        private global::System.Int32 _FacultyID;
        partial void OnFacultyIDChanging(global::System.Int32 value);
        partial void OnFacultyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Cathedra_Faculty", "Faculty")]
        public Faculty Faculty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityDBModel.FK_Cathedra_Faculty", "Faculty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityDBModel.FK_Cathedra_Faculty", "Faculty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Faculty> FacultyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityDBModel.FK_Cathedra_Faculty", "Faculty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Faculty>("UniversityDBModel.FK_Cathedra_Faculty", "Faculty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Teacher_Cathedra", "Teacher")]
        public EntityCollection<Teacher> Teachers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Teacher>("UniversityDBModel.FK_Teacher_Cathedra", "Teacher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Teacher>("UniversityDBModel.FK_Teacher_Cathedra", "Teacher", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Group_Cathedra", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("UniversityDBModel.FK_Group_Cathedra", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("UniversityDBModel.FK_Group_Cathedra", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Subject_Cathedra", "Subject")]
        public EntityCollection<Subject> Subjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subject>("UniversityDBModel.FK_Subject_Cathedra", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subject>("UniversityDBModel.FK_Subject_Cathedra", "Subject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="Control")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(LectureControl))]
    [KnownTypeAttribute(typeof(PracticeControl))]
    public abstract partial class Control : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MaxMark
        {
            get
            {
                return _MaxMark;
            }
            set
            {
                OnMaxMarkChanging(value);
                ReportPropertyChanging("MaxMark");
                _MaxMark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxMark");
                OnMaxMarkChanged();
            }
        }
        private global::System.Decimal _MaxMark;
        partial void OnMaxMarkChanging(global::System.Decimal value);
        partial void OnMaxMarkChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="Faculty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Faculty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Faculty object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Faculty CreateFaculty(global::System.Int32 id, global::System.String name)
        {
            Faculty faculty = new Faculty();
            faculty.ID = id;
            faculty.Name = name;
            return faculty;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InstituteID
        {
            get
            {
                return _InstituteID;
            }
            set
            {
                OnInstituteIDChanging(value);
                ReportPropertyChanging("InstituteID");
                _InstituteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstituteID");
                OnInstituteIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InstituteID;
        partial void OnInstituteIDChanging(Nullable<global::System.Int32> value);
        partial void OnInstituteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Faculty_Institute", "Institute")]
        public Institute Institute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("UniversityDBModel.FK_Faculty_Institute", "Institute").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("UniversityDBModel.FK_Faculty_Institute", "Institute").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institute> InstituteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("UniversityDBModel.FK_Faculty_Institute", "Institute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institute>("UniversityDBModel.FK_Faculty_Institute", "Institute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_FacultyAdmin_Faculty", "FacultyAdmin")]
        public EntityCollection<FacultyAdmin> FacultyAdmins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FacultyAdmin>("UniversityDBModel.FK_FacultyAdmin_Faculty", "FacultyAdmin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FacultyAdmin>("UniversityDBModel.FK_FacultyAdmin_Faculty", "FacultyAdmin", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_FacultySecretary_Faculty", "FacultySecretary")]
        public EntityCollection<FacultySecretary> FacultySecretaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FacultySecretary>("UniversityDBModel.FK_FacultySecretary_Faculty", "FacultySecretary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FacultySecretary>("UniversityDBModel.FK_FacultySecretary_Faculty", "FacultySecretary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Cathedra_Faculty", "Cathedra")]
        public EntityCollection<Cathedra> Cathedras
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cathedra>("UniversityDBModel.FK_Cathedra_Faculty", "Cathedra");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cathedra>("UniversityDBModel.FK_Cathedra_Faculty", "Cathedra", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Specialization_Faculty", "Specialization")]
        public EntityCollection<Specialization> Specializations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Specialization>("UniversityDBModel.FK_Specialization_Faculty", "Specialization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Specialization>("UniversityDBModel.FK_Specialization_Faculty", "Specialization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="FacultyAdmin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FacultyAdmin : SystemUser
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FacultyAdmin object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="facultyID">Initial value of the FacultyID property.</param>
        public static FacultyAdmin CreateFacultyAdmin(global::System.Int32 id, global::System.String login, global::System.Byte[] password, global::System.Int32 facultyID)
        {
            FacultyAdmin facultyAdmin = new FacultyAdmin();
            facultyAdmin.ID = id;
            facultyAdmin.Login = login;
            facultyAdmin.Password = password;
            facultyAdmin.FacultyID = facultyID;
            return facultyAdmin;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacultyID
        {
            get
            {
                return _FacultyID;
            }
            set
            {
                OnFacultyIDChanging(value);
                ReportPropertyChanging("FacultyID");
                _FacultyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyID");
                OnFacultyIDChanged();
            }
        }
        private global::System.Int32 _FacultyID;
        partial void OnFacultyIDChanging(global::System.Int32 value);
        partial void OnFacultyIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_FacultyAdmin_Faculty", "Faculty")]
        public Faculty Faculty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityDBModel.FK_FacultyAdmin_Faculty", "Faculty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityDBModel.FK_FacultyAdmin_Faculty", "Faculty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Faculty> FacultyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityDBModel.FK_FacultyAdmin_Faculty", "Faculty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Faculty>("UniversityDBModel.FK_FacultyAdmin_Faculty", "Faculty", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="FacultySecretary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FacultySecretary : SystemUser
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FacultySecretary object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="facultyID">Initial value of the FacultyID property.</param>
        public static FacultySecretary CreateFacultySecretary(global::System.Int32 id, global::System.String login, global::System.Byte[] password, global::System.Int32 facultyID)
        {
            FacultySecretary facultySecretary = new FacultySecretary();
            facultySecretary.ID = id;
            facultySecretary.Login = login;
            facultySecretary.Password = password;
            facultySecretary.FacultyID = facultyID;
            return facultySecretary;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacultyID
        {
            get
            {
                return _FacultyID;
            }
            set
            {
                OnFacultyIDChanging(value);
                ReportPropertyChanging("FacultyID");
                _FacultyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyID");
                OnFacultyIDChanged();
            }
        }
        private global::System.Int32 _FacultyID;
        partial void OnFacultyIDChanging(global::System.Int32 value);
        partial void OnFacultyIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_FacultySecretary_Faculty", "Faculty")]
        public Faculty Faculty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityDBModel.FK_FacultySecretary_Faculty", "Faculty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityDBModel.FK_FacultySecretary_Faculty", "Faculty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Faculty> FacultyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityDBModel.FK_FacultySecretary_Faculty", "Faculty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Faculty>("UniversityDBModel.FK_FacultySecretary_Faculty", "Faculty", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="specializationID">Initial value of the SpecializationID property.</param>
        /// <param name="creationYear">Initial value of the CreationYear property.</param>
        /// <param name="cathedraID">Initial value of the CathedraID property.</param>
        public static Group CreateGroup(global::System.Int32 id, global::System.String name, global::System.Int32 specializationID, global::System.Int32 creationYear, global::System.Int32 cathedraID)
        {
            Group group = new Group();
            group.ID = id;
            group.Name = name;
            group.SpecializationID = specializationID;
            group.CreationYear = creationYear;
            group.CathedraID = cathedraID;
            return group;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpecializationID
        {
            get
            {
                return _SpecializationID;
            }
            set
            {
                OnSpecializationIDChanging(value);
                ReportPropertyChanging("SpecializationID");
                _SpecializationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecializationID");
                OnSpecializationIDChanged();
            }
        }
        private global::System.Int32 _SpecializationID;
        partial void OnSpecializationIDChanging(global::System.Int32 value);
        partial void OnSpecializationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreationYear
        {
            get
            {
                return _CreationYear;
            }
            set
            {
                OnCreationYearChanging(value);
                ReportPropertyChanging("CreationYear");
                _CreationYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationYear");
                OnCreationYearChanged();
            }
        }
        private global::System.Int32 _CreationYear;
        partial void OnCreationYearChanging(global::System.Int32 value);
        partial void OnCreationYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CathedraID
        {
            get
            {
                return _CathedraID;
            }
            set
            {
                OnCathedraIDChanging(value);
                ReportPropertyChanging("CathedraID");
                _CathedraID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CathedraID");
                OnCathedraIDChanged();
            }
        }
        private global::System.Int32 _CathedraID;
        partial void OnCathedraIDChanging(global::System.Int32 value);
        partial void OnCathedraIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Group_Cathedra", "Cathedra")]
        public Cathedra Cathedra
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cathedra>("UniversityDBModel.FK_Group_Cathedra", "Cathedra").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cathedra>("UniversityDBModel.FK_Group_Cathedra", "Cathedra").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cathedra> CathedraReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cathedra>("UniversityDBModel.FK_Group_Cathedra", "Cathedra");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cathedra>("UniversityDBModel.FK_Group_Cathedra", "Cathedra", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Group_Specialization", "Specialization")]
        public Specialization Specialization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialization>("UniversityDBModel.FK_Group_Specialization", "Specialization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialization>("UniversityDBModel.FK_Group_Specialization", "Specialization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Specialization> SpecializationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialization>("UniversityDBModel.FK_Group_Specialization", "Specialization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Specialization>("UniversityDBModel.FK_Group_Specialization", "Specialization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Student_Group", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("UniversityDBModel.FK_Student_Group", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("UniversityDBModel.FK_Student_Group", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "Lecture_Group", "Lecture")]
        public EntityCollection<Lecture> Lectures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lecture>("UniversityDBModel.Lecture_Group", "Lecture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lecture>("UniversityDBModel.Lecture_Group", "Lecture", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="Institute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Institute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Institute object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Institute CreateInstitute(global::System.Int32 id, global::System.String name)
        {
            Institute institute = new Institute();
            institute.ID = id;
            institute.Name = name;
            return institute;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Faculty_Institute", "Faculty")]
        public EntityCollection<Faculty> Faculties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Faculty>("UniversityDBModel.FK_Faculty_Institute", "Faculty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Faculty>("UniversityDBModel.FK_Faculty_Institute", "Faculty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_InstituteAdmin_Institute", "InstituteAdmin")]
        public EntityCollection<InstituteAdmin> InstituteAdmins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstituteAdmin>("UniversityDBModel.FK_InstituteAdmin_Institute", "InstituteAdmin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstituteAdmin>("UniversityDBModel.FK_InstituteAdmin_Institute", "InstituteAdmin", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_InstituteSecretary_Institute", "InstituteSecretary")]
        public EntityCollection<InstituteSecretary> InstituteSecretaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstituteSecretary>("UniversityDBModel.FK_InstituteSecretary_Institute", "InstituteSecretary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstituteSecretary>("UniversityDBModel.FK_InstituteSecretary_Institute", "InstituteSecretary", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="InstituteAdmin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstituteAdmin : SystemUser
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstituteAdmin object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="instituteID">Initial value of the InstituteID property.</param>
        public static InstituteAdmin CreateInstituteAdmin(global::System.Int32 id, global::System.String login, global::System.Byte[] password, global::System.Int32 instituteID)
        {
            InstituteAdmin instituteAdmin = new InstituteAdmin();
            instituteAdmin.ID = id;
            instituteAdmin.Login = login;
            instituteAdmin.Password = password;
            instituteAdmin.InstituteID = instituteID;
            return instituteAdmin;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstituteID
        {
            get
            {
                return _InstituteID;
            }
            set
            {
                OnInstituteIDChanging(value);
                ReportPropertyChanging("InstituteID");
                _InstituteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstituteID");
                OnInstituteIDChanged();
            }
        }
        private global::System.Int32 _InstituteID;
        partial void OnInstituteIDChanging(global::System.Int32 value);
        partial void OnInstituteIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_InstituteAdmin_Institute", "Institute")]
        public Institute Institute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("UniversityDBModel.FK_InstituteAdmin_Institute", "Institute").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("UniversityDBModel.FK_InstituteAdmin_Institute", "Institute").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institute> InstituteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("UniversityDBModel.FK_InstituteAdmin_Institute", "Institute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institute>("UniversityDBModel.FK_InstituteAdmin_Institute", "Institute", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="InstituteSecretary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstituteSecretary : SystemUser
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstituteSecretary object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="instituteID">Initial value of the InstituteID property.</param>
        public static InstituteSecretary CreateInstituteSecretary(global::System.Int32 id, global::System.String login, global::System.Byte[] password, global::System.Int32 instituteID)
        {
            InstituteSecretary instituteSecretary = new InstituteSecretary();
            instituteSecretary.ID = id;
            instituteSecretary.Login = login;
            instituteSecretary.Password = password;
            instituteSecretary.InstituteID = instituteID;
            return instituteSecretary;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstituteID
        {
            get
            {
                return _InstituteID;
            }
            set
            {
                OnInstituteIDChanging(value);
                ReportPropertyChanging("InstituteID");
                _InstituteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstituteID");
                OnInstituteIDChanged();
            }
        }
        private global::System.Int32 _InstituteID;
        partial void OnInstituteIDChanging(global::System.Int32 value);
        partial void OnInstituteIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_InstituteSecretary_Institute", "Institute")]
        public Institute Institute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("UniversityDBModel.FK_InstituteSecretary_Institute", "Institute").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("UniversityDBModel.FK_InstituteSecretary_Institute", "Institute").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institute> InstituteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institute>("UniversityDBModel.FK_InstituteSecretary_Institute", "Institute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institute>("UniversityDBModel.FK_InstituteSecretary_Institute", "Institute", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="Lecture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lecture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lecture object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="teacherID">Initial value of the TeacherID property.</param>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        public static Lecture CreateLecture(global::System.Int32 id, global::System.Int32 teacherID, global::System.Int32 subjectID)
        {
            Lecture lecture = new Lecture();
            lecture.ID = id;
            lecture.TeacherID = teacherID;
            lecture.SubjectID = subjectID;
            return lecture;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeacherID
        {
            get
            {
                return _TeacherID;
            }
            set
            {
                OnTeacherIDChanging(value);
                ReportPropertyChanging("TeacherID");
                _TeacherID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeacherID");
                OnTeacherIDChanged();
            }
        }
        private global::System.Int32 _TeacherID;
        partial void OnTeacherIDChanging(global::System.Int32 value);
        partial void OnTeacherIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Lecture_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("UniversityDBModel.FK_Lecture_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("UniversityDBModel.FK_Lecture_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("UniversityDBModel.FK_Lecture_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("UniversityDBModel.FK_Lecture_Subject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Lecture_Teacher", "Teacher")]
        public Teacher Teacher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("UniversityDBModel.FK_Lecture_Teacher", "Teacher").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("UniversityDBModel.FK_Lecture_Teacher", "Teacher").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teacher> TeacherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("UniversityDBModel.FK_Lecture_Teacher", "Teacher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teacher>("UniversityDBModel.FK_Lecture_Teacher", "Teacher", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_LectureControl_Lecture", "LectureControl")]
        public EntityCollection<LectureControl> LectureControls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LectureControl>("UniversityDBModel.FK_LectureControl_Lecture", "LectureControl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LectureControl>("UniversityDBModel.FK_LectureControl_Lecture", "LectureControl", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "Lecture_Group", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("UniversityDBModel.Lecture_Group", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("UniversityDBModel.Lecture_Group", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="LectureControl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LectureControl : Control
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LectureControl object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="maxMark">Initial value of the MaxMark property.</param>
        /// <param name="lectureID">Initial value of the LectureID property.</param>
        public static LectureControl CreateLectureControl(global::System.Int32 id, global::System.String name, global::System.DateTime date, global::System.Decimal maxMark, global::System.Int32 lectureID)
        {
            LectureControl lectureControl = new LectureControl();
            lectureControl.ID = id;
            lectureControl.Name = name;
            lectureControl.Date = date;
            lectureControl.MaxMark = maxMark;
            lectureControl.LectureID = lectureID;
            return lectureControl;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LectureID
        {
            get
            {
                return _LectureID;
            }
            set
            {
                OnLectureIDChanging(value);
                ReportPropertyChanging("LectureID");
                _LectureID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LectureID");
                OnLectureIDChanged();
            }
        }
        private global::System.Int32 _LectureID;
        partial void OnLectureIDChanging(global::System.Int32 value);
        partial void OnLectureIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_LectureControl_Lecture", "Lecture")]
        public Lecture Lecture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lecture>("UniversityDBModel.FK_LectureControl_Lecture", "Lecture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lecture>("UniversityDBModel.FK_LectureControl_Lecture", "Lecture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lecture> LectureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lecture>("UniversityDBModel.FK_LectureControl_Lecture", "Lecture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lecture>("UniversityDBModel.FK_LectureControl_Lecture", "Lecture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "LectureControlLectureControlMark", "LectureControlMark")]
        public EntityCollection<LectureControlMark> LectureControlMarks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LectureControlMark>("UniversityDBModel.LectureControlLectureControlMark", "LectureControlMark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LectureControlMark>("UniversityDBModel.LectureControlLectureControlMark", "LectureControlMark", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="LectureControlMark")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LectureControlMark : Mark
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LectureControlMark object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="studentID">Initial value of the StudentID property.</param>
        /// <param name="markValue">Initial value of the MarkValue property.</param>
        /// <param name="lectureControlID">Initial value of the LectureControlID property.</param>
        public static LectureControlMark CreateLectureControlMark(global::System.Int32 id, global::System.Int32 studentID, global::System.Decimal markValue, global::System.Int32 lectureControlID)
        {
            LectureControlMark lectureControlMark = new LectureControlMark();
            lectureControlMark.ID = id;
            lectureControlMark.StudentID = studentID;
            lectureControlMark.MarkValue = markValue;
            lectureControlMark.LectureControlID = lectureControlID;
            return lectureControlMark;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LectureControlID
        {
            get
            {
                return _LectureControlID;
            }
            set
            {
                OnLectureControlIDChanging(value);
                ReportPropertyChanging("LectureControlID");
                _LectureControlID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LectureControlID");
                OnLectureControlIDChanged();
            }
        }
        private global::System.Int32 _LectureControlID;
        partial void OnLectureControlIDChanging(global::System.Int32 value);
        partial void OnLectureControlIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "LectureControlLectureControlMark", "LectureControl")]
        public LectureControl LectureControl
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LectureControl>("UniversityDBModel.LectureControlLectureControlMark", "LectureControl").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LectureControl>("UniversityDBModel.LectureControlLectureControlMark", "LectureControl").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LectureControl> LectureControlReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LectureControl>("UniversityDBModel.LectureControlLectureControlMark", "LectureControl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LectureControl>("UniversityDBModel.LectureControlLectureControlMark", "LectureControl", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="Mark")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(PracticeControlMark))]
    [KnownTypeAttribute(typeof(LectureControlMark))]
    public partial class Mark : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Mark object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="studentID">Initial value of the StudentID property.</param>
        /// <param name="markValue">Initial value of the MarkValue property.</param>
        public static Mark CreateMark(global::System.Int32 id, global::System.Int32 studentID, global::System.Decimal markValue)
        {
            Mark mark = new Mark();
            mark.ID = id;
            mark.StudentID = studentID;
            mark.MarkValue = markValue;
            return mark;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentID
        {
            get
            {
                return _StudentID;
            }
            set
            {
                OnStudentIDChanging(value);
                ReportPropertyChanging("StudentID");
                _StudentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentID");
                OnStudentIDChanged();
            }
        }
        private global::System.Int32 _StudentID;
        partial void OnStudentIDChanging(global::System.Int32 value);
        partial void OnStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MarkValue
        {
            get
            {
                return _MarkValue;
            }
            set
            {
                OnMarkValueChanging(value);
                ReportPropertyChanging("MarkValue");
                _MarkValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarkValue");
                OnMarkValueChanged();
            }
        }
        private global::System.Decimal _MarkValue;
        partial void OnMarkValueChanging(global::System.Decimal value);
        partial void OnMarkValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Mark_Student", "Student")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("UniversityDBModel.FK_Mark_Student", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("UniversityDBModel.FK_Mark_Student", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("UniversityDBModel.FK_Mark_Student", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("UniversityDBModel.FK_Mark_Student", "Student", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="Practice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Practice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Practice object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        public static Practice CreatePractice(global::System.Int32 id, global::System.Int32 subjectID)
        {
            Practice practice = new Practice();
            practice.ID = id;
            practice.SubjectID = subjectID;
            return practice;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Practice_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("UniversityDBModel.FK_Practice_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("UniversityDBModel.FK_Practice_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("UniversityDBModel.FK_Practice_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("UniversityDBModel.FK_Practice_Subject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Practice_Teacher_Practice", "Practice_Teacher")]
        public EntityCollection<PracticeTeacher> PracticeTeacher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PracticeTeacher>("UniversityDBModel.FK_Practice_Teacher_Practice", "Practice_Teacher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PracticeTeacher>("UniversityDBModel.FK_Practice_Teacher_Practice", "Practice_Teacher", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_PracticeControl_Practice", "PracticeControl")]
        public EntityCollection<PracticeControl> PracticeControls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PracticeControl>("UniversityDBModel.FK_PracticeControl_Practice", "PracticeControl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PracticeControl>("UniversityDBModel.FK_PracticeControl_Practice", "PracticeControl", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="PracticeControl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PracticeControl : Control
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PracticeControl object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="maxMark">Initial value of the MaxMark property.</param>
        /// <param name="practiceID">Initial value of the PracticeID property.</param>
        public static PracticeControl CreatePracticeControl(global::System.Int32 id, global::System.String name, global::System.DateTime date, global::System.Decimal maxMark, global::System.Int32 practiceID)
        {
            PracticeControl practiceControl = new PracticeControl();
            practiceControl.ID = id;
            practiceControl.Name = name;
            practiceControl.Date = date;
            practiceControl.MaxMark = maxMark;
            practiceControl.PracticeID = practiceID;
            return practiceControl;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PracticeID
        {
            get
            {
                return _PracticeID;
            }
            set
            {
                OnPracticeIDChanging(value);
                ReportPropertyChanging("PracticeID");
                _PracticeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PracticeID");
                OnPracticeIDChanged();
            }
        }
        private global::System.Int32 _PracticeID;
        partial void OnPracticeIDChanging(global::System.Int32 value);
        partial void OnPracticeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_PracticeControl_Practice", "Practice")]
        public Practice Practice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Practice>("UniversityDBModel.FK_PracticeControl_Practice", "Practice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Practice>("UniversityDBModel.FK_PracticeControl_Practice", "Practice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Practice> PracticeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Practice>("UniversityDBModel.FK_PracticeControl_Practice", "Practice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Practice>("UniversityDBModel.FK_PracticeControl_Practice", "Practice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "PracticeControlPracticeControlMark", "PracticeControlMark")]
        public EntityCollection<PracticeControlMark> PracticeControlMarks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PracticeControlMark>("UniversityDBModel.PracticeControlPracticeControlMark", "PracticeControlMark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PracticeControlMark>("UniversityDBModel.PracticeControlPracticeControlMark", "PracticeControlMark", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="PracticeControlMark")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PracticeControlMark : Mark
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PracticeControlMark object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="studentID">Initial value of the StudentID property.</param>
        /// <param name="markValue">Initial value of the MarkValue property.</param>
        /// <param name="practiceControlID">Initial value of the PracticeControlID property.</param>
        public static PracticeControlMark CreatePracticeControlMark(global::System.Int32 id, global::System.Int32 studentID, global::System.Decimal markValue, global::System.Int32 practiceControlID)
        {
            PracticeControlMark practiceControlMark = new PracticeControlMark();
            practiceControlMark.ID = id;
            practiceControlMark.StudentID = studentID;
            practiceControlMark.MarkValue = markValue;
            practiceControlMark.PracticeControlID = practiceControlID;
            return practiceControlMark;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PracticeControlID
        {
            get
            {
                return _PracticeControlID;
            }
            set
            {
                OnPracticeControlIDChanging(value);
                ReportPropertyChanging("PracticeControlID");
                _PracticeControlID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PracticeControlID");
                OnPracticeControlIDChanged();
            }
        }
        private global::System.Int32 _PracticeControlID;
        partial void OnPracticeControlIDChanging(global::System.Int32 value);
        partial void OnPracticeControlIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "PracticeControlPracticeControlMark", "PracticeControl")]
        public PracticeControl PracticeControl
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PracticeControl>("UniversityDBModel.PracticeControlPracticeControlMark", "PracticeControl").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PracticeControl>("UniversityDBModel.PracticeControlPracticeControlMark", "PracticeControl").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PracticeControl> PracticeControlReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PracticeControl>("UniversityDBModel.PracticeControlPracticeControlMark", "PracticeControl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PracticeControl>("UniversityDBModel.PracticeControlPracticeControlMark", "PracticeControl", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="PracticeTeacher")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PracticeTeacher : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PracticeTeacher object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="practiceID">Initial value of the PracticeID property.</param>
        /// <param name="teacherID">Initial value of the TeacherID property.</param>
        public static PracticeTeacher CreatePracticeTeacher(global::System.Int32 id, global::System.Int32 practiceID, global::System.Int32 teacherID)
        {
            PracticeTeacher practiceTeacher = new PracticeTeacher();
            practiceTeacher.ID = id;
            practiceTeacher.PracticeID = practiceID;
            practiceTeacher.TeacherID = teacherID;
            return practiceTeacher;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PracticeID
        {
            get
            {
                return _PracticeID;
            }
            set
            {
                OnPracticeIDChanging(value);
                ReportPropertyChanging("PracticeID");
                _PracticeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PracticeID");
                OnPracticeIDChanged();
            }
        }
        private global::System.Int32 _PracticeID;
        partial void OnPracticeIDChanging(global::System.Int32 value);
        partial void OnPracticeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeacherID
        {
            get
            {
                return _TeacherID;
            }
            set
            {
                OnTeacherIDChanging(value);
                ReportPropertyChanging("TeacherID");
                _TeacherID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeacherID");
                OnTeacherIDChanged();
            }
        }
        private global::System.Int32 _TeacherID;
        partial void OnTeacherIDChanging(global::System.Int32 value);
        partial void OnTeacherIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Practice_Teacher_Practice", "Practice")]
        public Practice Practice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Practice>("UniversityDBModel.FK_Practice_Teacher_Practice", "Practice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Practice>("UniversityDBModel.FK_Practice_Teacher_Practice", "Practice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Practice> PracticeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Practice>("UniversityDBModel.FK_Practice_Teacher_Practice", "Practice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Practice>("UniversityDBModel.FK_Practice_Teacher_Practice", "Practice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Practice_Teacher_Teacher", "Teacher")]
        public Teacher Teacher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("UniversityDBModel.FK_Practice_Teacher_Teacher", "Teacher").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("UniversityDBModel.FK_Practice_Teacher_Teacher", "Teacher").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teacher> TeacherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("UniversityDBModel.FK_Practice_Teacher_Teacher", "Teacher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teacher>("UniversityDBModel.FK_Practice_Teacher_Teacher", "Teacher", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "Practice_Teacher_Student", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("UniversityDBModel.Practice_Teacher_Student", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("UniversityDBModel.Practice_Teacher_Student", "Student", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="Specialization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Specialization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Specialization object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="facultyID">Initial value of the FacultyID property.</param>
        public static Specialization CreateSpecialization(global::System.Int32 id, global::System.String name, global::System.Int32 facultyID)
        {
            Specialization specialization = new Specialization();
            specialization.ID = id;
            specialization.Name = name;
            specialization.FacultyID = facultyID;
            return specialization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacultyID
        {
            get
            {
                return _FacultyID;
            }
            set
            {
                OnFacultyIDChanging(value);
                ReportPropertyChanging("FacultyID");
                _FacultyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyID");
                OnFacultyIDChanged();
            }
        }
        private global::System.Int32 _FacultyID;
        partial void OnFacultyIDChanging(global::System.Int32 value);
        partial void OnFacultyIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Specialization_Faculty", "Faculty")]
        public Faculty Faculty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityDBModel.FK_Specialization_Faculty", "Faculty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityDBModel.FK_Specialization_Faculty", "Faculty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Faculty> FacultyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityDBModel.FK_Specialization_Faculty", "Faculty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Faculty>("UniversityDBModel.FK_Specialization_Faculty", "Faculty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Group_Specialization", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("UniversityDBModel.FK_Group_Specialization", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("UniversityDBModel.FK_Group_Specialization", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : SystemUser
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        public static Student CreateStudent(global::System.Int32 id, global::System.String login, global::System.Byte[] password, global::System.Int32 groupID)
        {
            Student student = new Student();
            student.ID = id;
            student.Login = login;
            student.Password = password;
            student.GroupID = groupID;
            return student;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                OnGroupIDChanging(value);
                ReportPropertyChanging("GroupID");
                _GroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupID");
                OnGroupIDChanged();
            }
        }
        private global::System.Int32 _GroupID;
        partial void OnGroupIDChanging(global::System.Int32 value);
        partial void OnGroupIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Student_Group", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityDBModel.FK_Student_Group", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityDBModel.FK_Student_Group", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityDBModel.FK_Student_Group", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("UniversityDBModel.FK_Student_Group", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "Practice_Teacher_Student", "Practice_Teacher")]
        public EntityCollection<PracticeTeacher> PracticeTeachers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PracticeTeacher>("UniversityDBModel.Practice_Teacher_Student", "Practice_Teacher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PracticeTeacher>("UniversityDBModel.Practice_Teacher_Student", "Practice_Teacher", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Mark_Student", "Mark")]
        public EntityCollection<Mark> Marks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Mark>("UniversityDBModel.FK_Mark_Student", "Mark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Mark>("UniversityDBModel.FK_Mark_Student", "Mark", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="StudyRange")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StudyRange : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StudyRange object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="part">Initial value of the Part property.</param>
        public static StudyRange CreateStudyRange(global::System.Int32 id, global::System.Int32 year, global::System.Int32 part)
        {
            StudyRange studyRange = new StudyRange();
            studyRange.ID = id;
            studyRange.Year = year;
            studyRange.Part = part;
            return studyRange;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Part
        {
            get
            {
                return _Part;
            }
            set
            {
                OnPartChanging(value);
                ReportPropertyChanging("Part");
                _Part = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Part");
                OnPartChanged();
            }
        }
        private global::System.Int32 _Part;
        partial void OnPartChanging(global::System.Int32 value);
        partial void OnPartChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subject object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="cathedraID">Initial value of the CathedraID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Subject CreateSubject(global::System.Int32 id, global::System.Int32 cathedraID, global::System.String name)
        {
            Subject subject = new Subject();
            subject.ID = id;
            subject.CathedraID = cathedraID;
            subject.Name = name;
            return subject;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CathedraID
        {
            get
            {
                return _CathedraID;
            }
            set
            {
                OnCathedraIDChanging(value);
                ReportPropertyChanging("CathedraID");
                _CathedraID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CathedraID");
                OnCathedraIDChanged();
            }
        }
        private global::System.Int32 _CathedraID;
        partial void OnCathedraIDChanging(global::System.Int32 value);
        partial void OnCathedraIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Subject_Cathedra", "Cathedra")]
        public Cathedra Cathedra
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cathedra>("UniversityDBModel.FK_Subject_Cathedra", "Cathedra").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cathedra>("UniversityDBModel.FK_Subject_Cathedra", "Cathedra").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cathedra> CathedraReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cathedra>("UniversityDBModel.FK_Subject_Cathedra", "Cathedra");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cathedra>("UniversityDBModel.FK_Subject_Cathedra", "Cathedra", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Lecture_Subject", "Lecture")]
        public EntityCollection<Lecture> Lectures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lecture>("UniversityDBModel.FK_Lecture_Subject", "Lecture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lecture>("UniversityDBModel.FK_Lecture_Subject", "Lecture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Practice_Subject", "Practice")]
        public EntityCollection<Practice> Practices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Practice>("UniversityDBModel.FK_Practice_Subject", "Practice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Practice>("UniversityDBModel.FK_Practice_Subject", "Practice", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="SystemUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(FacultyAdmin))]
    [KnownTypeAttribute(typeof(InstituteAdmin))]
    [KnownTypeAttribute(typeof(FacultySecretary))]
    [KnownTypeAttribute(typeof(InstituteSecretary))]
    [KnownTypeAttribute(typeof(Teacher))]
    [KnownTypeAttribute(typeof(Student))]
    public partial class SystemUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemUser object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static SystemUser CreateSystemUser(global::System.Int32 id, global::System.String login, global::System.Byte[] password)
        {
            SystemUser systemUser = new SystemUser();
            systemUser.ID = id;
            systemUser.Login = login;
            systemUser.Password = password;
            return systemUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Password
        {
            get
            {
                return StructuralObject.GetValidValue(_Password);
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.Byte[] _Password;
        partial void OnPasswordChanging(global::System.Byte[] value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iUserRole
        {
            get
            {
                return _iUserRole;
            }
            set
            {
                OniUserRoleChanging(value);
                ReportPropertyChanging("iUserRole");
                _iUserRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iUserRole");
                OniUserRoleChanged();
            }
        }
        private global::System.Int32 _iUserRole = 0;
        partial void OniUserRoleChanging(global::System.Int32 value);
        partial void OniUserRoleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_UserInformation_SystemUser", "UserInformation")]
        public UserInformation UserInformation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInformation>("UniversityDBModel.FK_UserInformation_SystemUser", "UserInformation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInformation>("UniversityDBModel.FK_UserInformation_SystemUser", "UserInformation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInformation> UserInformationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInformation>("UniversityDBModel.FK_UserInformation_SystemUser", "UserInformation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserInformation>("UniversityDBModel.FK_UserInformation_SystemUser", "UserInformation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="Teacher")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Teacher : SystemUser
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Teacher object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="cathedraID">Initial value of the CathedraID property.</param>
        public static Teacher CreateTeacher(global::System.Int32 id, global::System.String login, global::System.Byte[] password, global::System.Int32 cathedraID)
        {
            Teacher teacher = new Teacher();
            teacher.ID = id;
            teacher.Login = login;
            teacher.Password = password;
            teacher.CathedraID = cathedraID;
            return teacher;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CathedraID
        {
            get
            {
                return _CathedraID;
            }
            set
            {
                OnCathedraIDChanging(value);
                ReportPropertyChanging("CathedraID");
                _CathedraID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CathedraID");
                OnCathedraIDChanged();
            }
        }
        private global::System.Int32 _CathedraID;
        partial void OnCathedraIDChanging(global::System.Int32 value);
        partial void OnCathedraIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Teacher_Cathedra", "Cathedra")]
        public Cathedra Cathedra
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cathedra>("UniversityDBModel.FK_Teacher_Cathedra", "Cathedra").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cathedra>("UniversityDBModel.FK_Teacher_Cathedra", "Cathedra").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cathedra> CathedraReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cathedra>("UniversityDBModel.FK_Teacher_Cathedra", "Cathedra");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cathedra>("UniversityDBModel.FK_Teacher_Cathedra", "Cathedra", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Lecture_Teacher", "Lecture")]
        public EntityCollection<Lecture> Lectures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lecture>("UniversityDBModel.FK_Lecture_Teacher", "Lecture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lecture>("UniversityDBModel.FK_Lecture_Teacher", "Lecture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Practice_Teacher_Teacher", "Practice_Teacher")]
        public EntityCollection<PracticeTeacher> PracticeTeacher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PracticeTeacher>("UniversityDBModel.FK_Practice_Teacher_Teacher", "Practice_Teacher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PracticeTeacher>("UniversityDBModel.FK_Practice_Teacher_Teacher", "Practice_Teacher", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_Attachment_Teacher", "Attachment")]
        public EntityCollection<Attachment> Attachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attachment>("UniversityDBModel.FK_Attachment_Teacher", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attachment>("UniversityDBModel.FK_Attachment_Teacher", "Attachment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityDBModel", Name="UserInformation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInformation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserInformation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static UserInformation CreateUserInformation(global::System.Int32 id, global::System.String firstName, global::System.String lastName)
        {
            UserInformation userInformation = new UserInformation();
            userInformation.ID = id;
            userInformation.FirstName = firstName;
            userInformation.LastName = lastName;
            return userInformation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityDBModel", "FK_UserInformation_SystemUser", "SystemUser")]
        public SystemUser SystemUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("UniversityDBModel.FK_UserInformation_SystemUser", "SystemUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("UniversityDBModel.FK_UserInformation_SystemUser", "SystemUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SystemUser> SystemUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("UniversityDBModel.FK_UserInformation_SystemUser", "SystemUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SystemUser>("UniversityDBModel.FK_UserInformation_SystemUser", "SystemUser", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
