//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThinClient.SCS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Session", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
    [System.SerializableAttribute()]
    public partial class Session : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.StudyRangeDTO StudyRangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.SystemUserDTO UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((this.SessionIDField.Equals(value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.StudyRangeDTO StudyRange {
            get {
                return this.StudyRangeField;
            }
            set {
                if ((object.ReferenceEquals(this.StudyRangeField, value) != true)) {
                    this.StudyRangeField = value;
                    this.RaisePropertyChanged("StudyRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.SystemUserDTO User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudyRangeDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class StudyRangeDTO : ThinClient.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearPartField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int YearPart {
            get {
                return this.YearPartField;
            }
            set {
                if ((this.YearPartField.Equals(value) != true)) {
                    this.YearPartField = value;
                    this.RaisePropertyChanged("YearPart");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemUserDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.FacultySecretaryDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.TeacherDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.StudentDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.InstituteAdminDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.FacultyAdminDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.InstituteSecretaryDTO))]
    public partial class SystemUserDTO : ThinClient.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.UserRoles RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.UserInformationDTO UserInformationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.UserRoles Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.UserInformationDTO UserInformation {
            get {
                return this.UserInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInformationField, value) != true)) {
                    this.UserInformationField = value;
                    this.RaisePropertyChanged("UserInformation");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntityDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.NamedEntityDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.CathedraDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.FacultyDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.InstituteDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.SpecializationDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.SubjectDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.GroupDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.ControlDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.LectureControlDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.PracticeControlDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.AttachmentDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.SystemUserDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.UserInformationDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.FacultySecretaryDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.TeacherDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.LectureDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.StudentDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.InstituteAdminDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.FacultyAdminDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.InstituteSecretaryDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.PracticeTeacherDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.PracticeDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.ControlMessageDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.MarkDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.LectureControlMarkDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.PracticeControlMarkDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.NotificationDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.VisitingsDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.VisitingDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.StudyRangeDTO))]
    public partial class BaseEntityDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NamedEntityDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.CathedraDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.FacultyDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.InstituteDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.SpecializationDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.SubjectDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.GroupDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.ControlDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.LectureControlDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.PracticeControlDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.AttachmentDTO))]
    public partial class NamedEntityDTO : ThinClient.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CathedraDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class CathedraDTO : ThinClient.SCS.NamedEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.FacultyDTO FacultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacultyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.SubjectDTO[] SubjectsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.FacultyDTO Faculty {
            get {
                return this.FacultyField;
            }
            set {
                if ((object.ReferenceEquals(this.FacultyField, value) != true)) {
                    this.FacultyField = value;
                    this.RaisePropertyChanged("Faculty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacultyID {
            get {
                return this.FacultyIDField;
            }
            set {
                if ((this.FacultyIDField.Equals(value) != true)) {
                    this.FacultyIDField = value;
                    this.RaisePropertyChanged("FacultyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.SubjectDTO[] Subjects {
            get {
                return this.SubjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectsField, value) != true)) {
                    this.SubjectsField = value;
                    this.RaisePropertyChanged("Subjects");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacultyDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class FacultyDTO : ThinClient.SCS.NamedEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.InstituteDTO InstituteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InstituteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.SpecializationDTO[] SpecializationsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.InstituteDTO Institute {
            get {
                return this.InstituteField;
            }
            set {
                if ((object.ReferenceEquals(this.InstituteField, value) != true)) {
                    this.InstituteField = value;
                    this.RaisePropertyChanged("Institute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InstituteID {
            get {
                return this.InstituteIDField;
            }
            set {
                if ((this.InstituteIDField.Equals(value) != true)) {
                    this.InstituteIDField = value;
                    this.RaisePropertyChanged("InstituteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.SpecializationDTO[] Specializations {
            get {
                return this.SpecializationsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecializationsField, value) != true)) {
                    this.SpecializationsField = value;
                    this.RaisePropertyChanged("Specializations");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstituteDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class InstituteDTO : ThinClient.SCS.NamedEntityDTO {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpecializationDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class SpecializationDTO : ThinClient.SCS.NamedEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacultyIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacultyID {
            get {
                return this.FacultyIDField;
            }
            set {
                if ((this.FacultyIDField.Equals(value) != true)) {
                    this.FacultyIDField = value;
                    this.RaisePropertyChanged("FacultyID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubjectDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class SubjectDTO : ThinClient.SCS.NamedEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.CathedraDTO CathedraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CathedraIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.CathedraDTO Cathedra {
            get {
                return this.CathedraField;
            }
            set {
                if ((object.ReferenceEquals(this.CathedraField, value) != true)) {
                    this.CathedraField = value;
                    this.RaisePropertyChanged("Cathedra");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CathedraID {
            get {
                return this.CathedraIDField;
            }
            set {
                if ((this.CathedraIDField.Equals(value) != true)) {
                    this.CathedraIDField = value;
                    this.RaisePropertyChanged("CathedraID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class GroupDTO : ThinClient.SCS.NamedEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.CathedraDTO CathedraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CathedraIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.SpecializationDTO SpecializationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpecializationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudyRangeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.CathedraDTO Cathedra {
            get {
                return this.CathedraField;
            }
            set {
                if ((object.ReferenceEquals(this.CathedraField, value) != true)) {
                    this.CathedraField = value;
                    this.RaisePropertyChanged("Cathedra");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CathedraID {
            get {
                return this.CathedraIDField;
            }
            set {
                if ((this.CathedraIDField.Equals(value) != true)) {
                    this.CathedraIDField = value;
                    this.RaisePropertyChanged("CathedraID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.SpecializationDTO Specialization {
            get {
                return this.SpecializationField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecializationField, value) != true)) {
                    this.SpecializationField = value;
                    this.RaisePropertyChanged("Specialization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpecializationID {
            get {
                return this.SpecializationIDField;
            }
            set {
                if ((this.SpecializationIDField.Equals(value) != true)) {
                    this.SpecializationIDField = value;
                    this.RaisePropertyChanged("SpecializationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudyRangeID {
            get {
                return this.StudyRangeIDField;
            }
            set {
                if ((this.StudyRangeIDField.Equals(value) != true)) {
                    this.StudyRangeIDField = value;
                    this.RaisePropertyChanged("StudyRangeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.LectureControlDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.PracticeControlDTO))]
    public partial class ControlDTO : ThinClient.SCS.NamedEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxMarkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaxMark {
            get {
                return this.MaxMarkField;
            }
            set {
                if ((this.MaxMarkField.Equals(value) != true)) {
                    this.MaxMarkField = value;
                    this.RaisePropertyChanged("MaxMark");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LectureControlDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class LectureControlDTO : ThinClient.SCS.ControlDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LectureIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LectureID {
            get {
                return this.LectureIDField;
            }
            set {
                if ((this.LectureIDField.Equals(value) != true)) {
                    this.LectureIDField = value;
                    this.RaisePropertyChanged("LectureID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PracticeControlDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class PracticeControlDTO : ThinClient.SCS.ControlDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PracticeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PracticeID {
            get {
                return this.PracticeIDField;
            }
            set {
                if ((this.PracticeIDField.Equals(value) != true)) {
                    this.PracticeIDField = value;
                    this.RaisePropertyChanged("PracticeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class AttachmentDTO : ThinClient.SCS.NamedEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeacherIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeacherID {
            get {
                return this.TeacherIDField;
            }
            set {
                if ((this.TeacherIDField.Equals(value) != true)) {
                    this.TeacherIDField = value;
                    this.RaisePropertyChanged("TeacherID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInformationDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class UserInformationDTO : ThinClient.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacultySecretaryDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class FacultySecretaryDTO : ThinClient.SCS.SystemUserDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.FacultyDTO FacultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacultyIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.FacultyDTO Faculty {
            get {
                return this.FacultyField;
            }
            set {
                if ((object.ReferenceEquals(this.FacultyField, value) != true)) {
                    this.FacultyField = value;
                    this.RaisePropertyChanged("Faculty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacultyID {
            get {
                return this.FacultyIDField;
            }
            set {
                if ((this.FacultyIDField.Equals(value) != true)) {
                    this.FacultyIDField = value;
                    this.RaisePropertyChanged("FacultyID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeacherDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class TeacherDTO : ThinClient.SCS.SystemUserDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.CathedraDTO CathedraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CathedraIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.LectureDTO[] LecturesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.CathedraDTO Cathedra {
            get {
                return this.CathedraField;
            }
            set {
                if ((object.ReferenceEquals(this.CathedraField, value) != true)) {
                    this.CathedraField = value;
                    this.RaisePropertyChanged("Cathedra");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CathedraID {
            get {
                return this.CathedraIDField;
            }
            set {
                if ((this.CathedraIDField.Equals(value) != true)) {
                    this.CathedraIDField = value;
                    this.RaisePropertyChanged("CathedraID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.LectureDTO[] Lectures {
            get {
                return this.LecturesField;
            }
            set {
                if ((object.ReferenceEquals(this.LecturesField, value) != true)) {
                    this.LecturesField = value;
                    this.RaisePropertyChanged("Lectures");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LectureDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class LectureDTO : ThinClient.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.GroupDTO[] GroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.SubjectDTO SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.TeacherDTO TeacherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeacherIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.GroupDTO[] Groups {
            get {
                return this.GroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupsField, value) != true)) {
                    this.GroupsField = value;
                    this.RaisePropertyChanged("Groups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.SubjectDTO Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.TeacherDTO Teacher {
            get {
                return this.TeacherField;
            }
            set {
                if ((object.ReferenceEquals(this.TeacherField, value) != true)) {
                    this.TeacherField = value;
                    this.RaisePropertyChanged("Teacher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeacherID {
            get {
                return this.TeacherIDField;
            }
            set {
                if ((this.TeacherIDField.Equals(value) != true)) {
                    this.TeacherIDField = value;
                    this.RaisePropertyChanged("TeacherID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class StudentDTO : ThinClient.SCS.SystemUserDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.GroupDTO GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.GroupDTO Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstituteAdminDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class InstituteAdminDTO : ThinClient.SCS.SystemUserDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.InstituteDTO InstituteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstituteIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.InstituteDTO Institute {
            get {
                return this.InstituteField;
            }
            set {
                if ((object.ReferenceEquals(this.InstituteField, value) != true)) {
                    this.InstituteField = value;
                    this.RaisePropertyChanged("Institute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstituteID {
            get {
                return this.InstituteIDField;
            }
            set {
                if ((this.InstituteIDField.Equals(value) != true)) {
                    this.InstituteIDField = value;
                    this.RaisePropertyChanged("InstituteID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacultyAdminDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class FacultyAdminDTO : ThinClient.SCS.SystemUserDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.FacultyDTO FacultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacultyIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.FacultyDTO Faculty {
            get {
                return this.FacultyField;
            }
            set {
                if ((object.ReferenceEquals(this.FacultyField, value) != true)) {
                    this.FacultyField = value;
                    this.RaisePropertyChanged("Faculty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacultyID {
            get {
                return this.FacultyIDField;
            }
            set {
                if ((this.FacultyIDField.Equals(value) != true)) {
                    this.FacultyIDField = value;
                    this.RaisePropertyChanged("FacultyID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstituteSecretaryDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class InstituteSecretaryDTO : ThinClient.SCS.SystemUserDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.InstituteDTO InstituteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstituteIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.InstituteDTO Institute {
            get {
                return this.InstituteField;
            }
            set {
                if ((object.ReferenceEquals(this.InstituteField, value) != true)) {
                    this.InstituteField = value;
                    this.RaisePropertyChanged("Institute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstituteID {
            get {
                return this.InstituteIDField;
            }
            set {
                if ((this.InstituteIDField.Equals(value) != true)) {
                    this.InstituteIDField = value;
                    this.RaisePropertyChanged("InstituteID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PracticeTeacherDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class PracticeTeacherDTO : ThinClient.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.PracticeDTO PracticeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PracticeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.StudentDTO[] StudentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeacherIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.PracticeDTO Practice {
            get {
                return this.PracticeField;
            }
            set {
                if ((object.ReferenceEquals(this.PracticeField, value) != true)) {
                    this.PracticeField = value;
                    this.RaisePropertyChanged("Practice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PracticeID {
            get {
                return this.PracticeIDField;
            }
            set {
                if ((this.PracticeIDField.Equals(value) != true)) {
                    this.PracticeIDField = value;
                    this.RaisePropertyChanged("PracticeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.StudentDTO[] Students {
            get {
                return this.StudentsField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentsField, value) != true)) {
                    this.StudentsField = value;
                    this.RaisePropertyChanged("Students");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeacherID {
            get {
                return this.TeacherIDField;
            }
            set {
                if ((this.TeacherIDField.Equals(value) != true)) {
                    this.TeacherIDField = value;
                    this.RaisePropertyChanged("TeacherID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PracticeDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class PracticeDTO : ThinClient.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.SubjectDTO SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubjectIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.SubjectDTO Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubjectID {
            get {
                return this.SubjectIDField;
            }
            set {
                if ((this.SubjectIDField.Equals(value) != true)) {
                    this.SubjectIDField = value;
                    this.RaisePropertyChanged("SubjectID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControlMessageDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class ControlMessageDTO : ThinClient.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.ControlDTO ControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ControlIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.SystemUserDTO OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.ControlDTO Control {
            get {
                return this.ControlField;
            }
            set {
                if ((object.ReferenceEquals(this.ControlField, value) != true)) {
                    this.ControlField = value;
                    this.RaisePropertyChanged("Control");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ControlID {
            get {
                return this.ControlIDField;
            }
            set {
                if ((this.ControlIDField.Equals(value) != true)) {
                    this.ControlIDField = value;
                    this.RaisePropertyChanged("ControlID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.SystemUserDTO Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarkDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.LectureControlMarkDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThinClient.SCS.PracticeControlMarkDTO))]
    public partial class MarkDTO : ThinClient.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarkValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.StudentDTO StudentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudentIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MarkValue {
            get {
                return this.MarkValueField;
            }
            set {
                if ((this.MarkValueField.Equals(value) != true)) {
                    this.MarkValueField = value;
                    this.RaisePropertyChanged("MarkValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.StudentDTO Student {
            get {
                return this.StudentField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentField, value) != true)) {
                    this.StudentField = value;
                    this.RaisePropertyChanged("Student");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentID {
            get {
                return this.StudentIDField;
            }
            set {
                if ((this.StudentIDField.Equals(value) != true)) {
                    this.StudentIDField = value;
                    this.RaisePropertyChanged("StudentID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LectureControlMarkDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class LectureControlMarkDTO : ThinClient.SCS.MarkDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LectureControlIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LectureControlID {
            get {
                return this.LectureControlIDField;
            }
            set {
                if ((this.LectureControlIDField.Equals(value) != true)) {
                    this.LectureControlIDField = value;
                    this.RaisePropertyChanged("LectureControlID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PracticeControlMarkDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class PracticeControlMarkDTO : ThinClient.SCS.MarkDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PracticeControlIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PracticeControlID {
            get {
                return this.PracticeControlIDField;
            }
            set {
                if ((this.PracticeControlIDField.Equals(value) != true)) {
                    this.PracticeControlIDField = value;
                    this.RaisePropertyChanged("PracticeControlID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotificationDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class NotificationDTO : ThinClient.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VisitingsDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class VisitingsDTO : ThinClient.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.LectureDTO LectureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.PracticeDTO PracticeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.VisitingDTO[] VisitingsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.LectureDTO Lecture {
            get {
                return this.LectureField;
            }
            set {
                if ((object.ReferenceEquals(this.LectureField, value) != true)) {
                    this.LectureField = value;
                    this.RaisePropertyChanged("Lecture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.PracticeDTO Practice {
            get {
                return this.PracticeField;
            }
            set {
                if ((object.ReferenceEquals(this.PracticeField, value) != true)) {
                    this.PracticeField = value;
                    this.RaisePropertyChanged("Practice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentID {
            get {
                return this.StudentIDField;
            }
            set {
                if ((this.StudentIDField.Equals(value) != true)) {
                    this.StudentIDField = value;
                    this.RaisePropertyChanged("StudentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentName {
            get {
                return this.StudentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentNameField, value) != true)) {
                    this.StudentNameField = value;
                    this.RaisePropertyChanged("StudentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.VisitingDTO[] Visitings {
            get {
                return this.VisitingsField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitingsField, value) != true)) {
                    this.VisitingsField = value;
                    this.RaisePropertyChanged("Visitings");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VisitingDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class VisitingDTO : ThinClient.SCS.BaseEntityDTO {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.LectureDTO LectureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.PracticeDTO PracticeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.VisitingValue ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.LectureDTO Lecture {
            get {
                return this.LectureField;
            }
            set {
                if ((object.ReferenceEquals(this.LectureField, value) != true)) {
                    this.LectureField = value;
                    this.RaisePropertyChanged("Lecture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.PracticeDTO Practice {
            get {
                return this.PracticeField;
            }
            set {
                if ((object.ReferenceEquals(this.PracticeField, value) != true)) {
                    this.PracticeField = value;
                    this.RaisePropertyChanged("Practice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentID {
            get {
                return this.StudentIDField;
            }
            set {
                if ((this.StudentIDField.Equals(value) != true)) {
                    this.StudentIDField = value;
                    this.RaisePropertyChanged("StudentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.VisitingValue Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRoles", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    public enum UserRoles : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainAdmin = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstituteAdmin = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FacultyAdmin = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainSecretary = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstituteSecretary = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FacultySecretary = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Teacher = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Student = 128,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="VisitingValue", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    public enum VisitingValue : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Present = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Absent = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sick = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Individual = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
    [System.SerializableAttribute()]
    public partial class ControllerServiceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRateItemDTO", Namespace="http://schemas.datacontract.org/2004/07/EntitiesDTO")]
    [System.SerializableAttribute()]
    public partial class UserRateItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ThinClient.SCS.StudentDTO StudentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThinClient.SCS.StudentDTO Student {
            get {
                return this.StudentField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentField, value) != true)) {
                    this.StudentField = value;
                    this.RaisePropertyChanged("Student");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SCS.IControllerService")]
    public interface IControllerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/Login", ReplyAction="http://tempuri.org/IControllerService/LoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/LoginControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.Session Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetInstitutes", ReplyAction="http://tempuri.org/IControllerService/GetInstitutesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetInstitutesControllerServiceExceptionFaul" +
            "t", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.InstituteDTO[] GetInstitutes(ThinClient.SCS.Session session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetAllFaculties", ReplyAction="http://tempuri.org/IControllerService/GetAllFacultiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetAllFacultiesControllerServiceExceptionFa" +
            "ult", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.FacultyDTO[] GetAllFaculties(ThinClient.SCS.Session session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetFaculties", ReplyAction="http://tempuri.org/IControllerService/GetFacultiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetFacultiesControllerServiceExceptionFault" +
            "", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.FacultyDTO[] GetFaculties(ThinClient.SCS.Session session, System.Nullable<int> instituteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetAllCathedras", ReplyAction="http://tempuri.org/IControllerService/GetAllCathedrasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetAllCathedrasControllerServiceExceptionFa" +
            "ult", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.CathedraDTO[] GetAllCathedras(ThinClient.SCS.Session session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetCathedras", ReplyAction="http://tempuri.org/IControllerService/GetCathedrasResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetCathedrasControllerServiceExceptionFault" +
            "", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.CathedraDTO[] GetCathedras(ThinClient.SCS.Session session, int facultyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetGroups", ReplyAction="http://tempuri.org/IControllerService/GetGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetGroupsControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.GroupDTO[] GetGroups(ThinClient.SCS.Session session, int cathedraID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetAllGroups", ReplyAction="http://tempuri.org/IControllerService/GetAllGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetAllGroupsControllerServiceExceptionFault" +
            "", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.GroupDTO[] GetAllGroups(ThinClient.SCS.Session session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SaveInstitute", ReplyAction="http://tempuri.org/IControllerService/SaveInstituteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SaveInstituteControllerServiceExceptionFaul" +
            "t", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SaveInstitute(ThinClient.SCS.Session session, ThinClient.SCS.InstituteDTO institute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SaveFaculty", ReplyAction="http://tempuri.org/IControllerService/SaveFacultyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SaveFacultyControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SaveFaculty(ThinClient.SCS.Session session, ThinClient.SCS.FacultyDTO faculty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SaveCathedra", ReplyAction="http://tempuri.org/IControllerService/SaveCathedraResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SaveCathedraControllerServiceExceptionFault" +
            "", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SaveCathedra(ThinClient.SCS.Session session, ThinClient.SCS.CathedraDTO cathedra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SaveGroup", ReplyAction="http://tempuri.org/IControllerService/SaveGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SaveGroupControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SaveGroup(ThinClient.SCS.Session session, ThinClient.SCS.GroupDTO group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetUsers", ReplyAction="http://tempuri.org/IControllerService/GetUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetUsersControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.SystemUserDTO[] GetUsers(ThinClient.SCS.Session session, ThinClient.SCS.UserRoles roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SaveUser", ReplyAction="http://tempuri.org/IControllerService/SaveUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SaveUserControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SaveUser(ThinClient.SCS.Session session, ThinClient.SCS.SystemUserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetSpecializations", ReplyAction="http://tempuri.org/IControllerService/GetSpecializationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetSpecializationsControllerServiceExceptio" +
            "nFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.SpecializationDTO[] GetSpecializations(ThinClient.SCS.Session session, int facultyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/DeleteInstitute", ReplyAction="http://tempuri.org/IControllerService/DeleteInstituteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/DeleteInstituteControllerServiceExceptionFa" +
            "ult", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void DeleteInstitute(ThinClient.SCS.Session session, int instituteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/DeleteFaculty", ReplyAction="http://tempuri.org/IControllerService/DeleteFacultyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/DeleteFacultyControllerServiceExceptionFaul" +
            "t", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void DeleteFaculty(ThinClient.SCS.Session session, int facultyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/DeleteCathedra", ReplyAction="http://tempuri.org/IControllerService/DeleteCathedraResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/DeleteCathedraControllerServiceExceptionFau" +
            "lt", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void DeleteCathedra(ThinClient.SCS.Session session, int cathedraID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/DeleteGroup", ReplyAction="http://tempuri.org/IControllerService/DeleteGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/DeleteGroupControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void DeleteGroup(ThinClient.SCS.Session session, int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/DeleteUser", ReplyAction="http://tempuri.org/IControllerService/DeleteUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/DeleteUserControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void DeleteUser(ThinClient.SCS.Session session, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetGroupByID", ReplyAction="http://tempuri.org/IControllerService/GetGroupByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetGroupByIDControllerServiceExceptionFault" +
            "", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.GroupDTO GetGroupByID(ThinClient.SCS.Session session, System.Nullable<int> groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetSpecializationByID", ReplyAction="http://tempuri.org/IControllerService/GetSpecializationByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetSpecializationByIDControllerServiceExcep" +
            "tionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.SpecializationDTO GetSpecializationByID(ThinClient.SCS.Session session, System.Nullable<int> specializationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetLectures", ReplyAction="http://tempuri.org/IControllerService/GetLecturesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetLecturesControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.LectureDTO[] GetLectures(ThinClient.SCS.Session session, int teacherID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetLectureGroups", ReplyAction="http://tempuri.org/IControllerService/GetLectureGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetLectureGroupsControllerServiceExceptionF" +
            "ault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.GroupDTO[] GetLectureGroups(ThinClient.SCS.Session session, int lectureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetTeachers", ReplyAction="http://tempuri.org/IControllerService/GetTeachersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetTeachersControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.TeacherDTO[] GetTeachers(ThinClient.SCS.Session session, int cathedraID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetSubjects", ReplyAction="http://tempuri.org/IControllerService/GetSubjectsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetSubjectsControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.SubjectDTO[] GetSubjects(ThinClient.SCS.Session session, int cathedraID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SaveLecture", ReplyAction="http://tempuri.org/IControllerService/SaveLectureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SaveLectureControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SaveLecture(ThinClient.SCS.Session session, ThinClient.SCS.LectureDTO lecture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SaveTeacherSubjects", ReplyAction="http://tempuri.org/IControllerService/SaveTeacherSubjectsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SaveTeacherSubjectsControllerServiceExcepti" +
            "onFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SaveTeacherSubjects(ThinClient.SCS.Session session, int teacherID, ThinClient.SCS.SubjectDTO[] subjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetPracticesTeacher", ReplyAction="http://tempuri.org/IControllerService/GetPracticesTeacherResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetPracticesTeacherControllerServiceExcepti" +
            "onFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.PracticeTeacherDTO[] GetPracticesTeacher(ThinClient.SCS.Session session, int teacherID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetGroupsPractice", ReplyAction="http://tempuri.org/IControllerService/GetGroupsPracticeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetGroupsPracticeControllerServiceException" +
            "Fault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.GroupDTO[] GetGroupsPractice(ThinClient.SCS.Session session, int practiceTeacherID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetTeacherPracticeSubjects", ReplyAction="http://tempuri.org/IControllerService/GetTeacherPracticeSubjectsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetTeacherPracticeSubjectsControllerService" +
            "ExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.SubjectDTO[] GetTeacherPracticeSubjects(ThinClient.SCS.Session session, int teacherID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetAllStudents", ReplyAction="http://tempuri.org/IControllerService/GetAllStudentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetAllStudentsControllerServiceExceptionFau" +
            "lt", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.StudentDTO[] GetAllStudents(ThinClient.SCS.Session session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetGroupStudents", ReplyAction="http://tempuri.org/IControllerService/GetGroupStudentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetGroupStudentsControllerServiceExceptionF" +
            "ault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.StudentDTO[] GetGroupStudents(ThinClient.SCS.Session session, int groupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetCathedraStudents", ReplyAction="http://tempuri.org/IControllerService/GetCathedraStudentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetCathedraStudentsControllerServiceExcepti" +
            "onFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.StudentDTO[] GetCathedraStudents(ThinClient.SCS.Session session, int cathedraID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetFacultyStudents", ReplyAction="http://tempuri.org/IControllerService/GetFacultyStudentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetFacultyStudentsControllerServiceExceptio" +
            "nFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.StudentDTO[] GetFacultyStudents(ThinClient.SCS.Session session, int facultyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetInstituteStudents", ReplyAction="http://tempuri.org/IControllerService/GetInstituteStudentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetInstituteStudentsControllerServiceExcept" +
            "ionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.StudentDTO[] GetInstituteStudents(ThinClient.SCS.Session session, int instituteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SavePracticeTeacher", ReplyAction="http://tempuri.org/IControllerService/SavePracticeTeacherResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SavePracticeTeacherControllerServiceExcepti" +
            "onFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SavePracticeTeacher(ThinClient.SCS.Session session, ThinClient.SCS.PracticeTeacherDTO practiceTeacher);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetFacultyGroups", ReplyAction="http://tempuri.org/IControllerService/GetFacultyGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetFacultyGroupsControllerServiceExceptionF" +
            "ault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.GroupDTO[] GetFacultyGroups(ThinClient.SCS.Session session, int facultyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetInstituteGroups", ReplyAction="http://tempuri.org/IControllerService/GetInstituteGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetInstituteGroupsControllerServiceExceptio" +
            "nFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.GroupDTO[] GetInstituteGroups(ThinClient.SCS.Session session, int instituteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SavePracticeTeacherSubjects", ReplyAction="http://tempuri.org/IControllerService/SavePracticeTeacherSubjectsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SavePracticeTeacherSubjectsControllerServic" +
            "eExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SavePracticeTeacherSubjects(ThinClient.SCS.Session session, int teacherID, ThinClient.SCS.SubjectDTO[] subjects);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetTeacher", ReplyAction="http://tempuri.org/IControllerService/GetTeacherResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetTeacherControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.TeacherDTO GetTeacher(ThinClient.SCS.Session session, int teacherID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetInstituteByID", ReplyAction="http://tempuri.org/IControllerService/GetInstituteByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetInstituteByIDControllerServiceExceptionF" +
            "ault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.InstituteDTO GetInstituteByID(ThinClient.SCS.Session session, System.Nullable<int> instituteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetFacultyByID", ReplyAction="http://tempuri.org/IControllerService/GetFacultyByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetFacultyByIDControllerServiceExceptionFau" +
            "lt", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.FacultyDTO GetFacultyByID(ThinClient.SCS.Session session, int facultyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetCathedraByID", ReplyAction="http://tempuri.org/IControllerService/GetCathedraByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetCathedraByIDControllerServiceExceptionFa" +
            "ult", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.CathedraDTO GetCathedraByID(ThinClient.SCS.Session session, int cathedraID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetLectureControls", ReplyAction="http://tempuri.org/IControllerService/GetLectureControlsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetLectureControlsControllerServiceExceptio" +
            "nFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.LectureControlDTO[] GetLectureControls(ThinClient.SCS.Session session, int lectureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SaveLectureControls", ReplyAction="http://tempuri.org/IControllerService/SaveLectureControlsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SaveLectureControlsControllerServiceExcepti" +
            "onFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SaveLectureControls(ThinClient.SCS.Session session, int lectureID, ThinClient.SCS.LectureControlDTO[] controls);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetPracticeControls", ReplyAction="http://tempuri.org/IControllerService/GetPracticeControlsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetPracticeControlsControllerServiceExcepti" +
            "onFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.PracticeControlDTO[] GetPracticeControls(ThinClient.SCS.Session session, int practiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SavePracticeControls", ReplyAction="http://tempuri.org/IControllerService/SavePracticeControlsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SavePracticeControlsControllerServiceExcept" +
            "ionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SavePracticeControls(ThinClient.SCS.Session session, int practiceID, ThinClient.SCS.PracticeControlDTO[] controls);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetControlMessages", ReplyAction="http://tempuri.org/IControllerService/GetControlMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetControlMessagesControllerServiceExceptio" +
            "nFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.ControlMessageDTO[] GetControlMessages(ThinClient.SCS.Session session, int controlID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SaveControlMessage", ReplyAction="http://tempuri.org/IControllerService/SaveControlMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SaveControlMessageControllerServiceExceptio" +
            "nFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SaveControlMessage(ThinClient.SCS.Session session, ThinClient.SCS.ControlMessageDTO message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SaveLectureControl", ReplyAction="http://tempuri.org/IControllerService/SaveLectureControlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SaveLectureControlControllerServiceExceptio" +
            "nFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SaveLectureControl(ThinClient.SCS.Session session, ThinClient.SCS.LectureControlDTO control);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetStudentLectures", ReplyAction="http://tempuri.org/IControllerService/GetStudentLecturesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetStudentLecturesControllerServiceExceptio" +
            "nFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.LectureDTO[] GetStudentLectures(ThinClient.SCS.Session session, int studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetAttachments", ReplyAction="http://tempuri.org/IControllerService/GetAttachmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetAttachmentsControllerServiceExceptionFau" +
            "lt", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.AttachmentDTO[] GetAttachments(ThinClient.SCS.Session session, int teacherID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SaveAttachments", ReplyAction="http://tempuri.org/IControllerService/SaveAttachmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SaveAttachmentsControllerServiceExceptionFa" +
            "ult", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SaveAttachments(ThinClient.SCS.Session session, int userID, ThinClient.SCS.AttachmentDTO[] attachments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/DeleteAttachment", ReplyAction="http://tempuri.org/IControllerService/DeleteAttachmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/DeleteAttachmentControllerServiceExceptionF" +
            "ault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void DeleteAttachment(ThinClient.SCS.Session session, int attachmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetLectureMark", ReplyAction="http://tempuri.org/IControllerService/GetLectureMarkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetLectureMarkControllerServiceExceptionFau" +
            "lt", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        decimal GetLectureMark(ThinClient.SCS.Session session, int studentID, int controlID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetPracticeMark", ReplyAction="http://tempuri.org/IControllerService/GetPracticeMarkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetPracticeMarkControllerServiceExceptionFa" +
            "ult", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        decimal GetPracticeMark(ThinClient.SCS.Session session, int studentID, int controlID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SavePracticeControl", ReplyAction="http://tempuri.org/IControllerService/SavePracticeControlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SavePracticeControlControllerServiceExcepti" +
            "onFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SavePracticeControl(ThinClient.SCS.Session session, ThinClient.SCS.PracticeControlDTO control);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetStudentPractices", ReplyAction="http://tempuri.org/IControllerService/GetStudentPracticesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetStudentPracticesControllerServiceExcepti" +
            "onFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.PracticeTeacherDTO[] GetStudentPractices(ThinClient.SCS.Session session, int studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetMarks", ReplyAction="http://tempuri.org/IControllerService/GetMarksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetMarksControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.MarkDTO[] GetMarks(ThinClient.SCS.Session session, ThinClient.SCS.ControlDTO control);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/SaveMarks", ReplyAction="http://tempuri.org/IControllerService/SaveMarksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/SaveMarksControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void SaveMarks(ThinClient.SCS.Session session, ThinClient.SCS.ControlDTO control, ThinClient.SCS.MarkDTO[] marks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetStudentRateList", ReplyAction="http://tempuri.org/IControllerService/GetStudentRateListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetStudentRateListControllerServiceExceptio" +
            "nFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.UserRateItemDTO[] GetStudentRateList(ThinClient.SCS.Session session, ThinClient.SCS.BaseEntityDTO universityStructureItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetNotifications", ReplyAction="http://tempuri.org/IControllerService/GetNotificationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetNotificationsControllerServiceExceptionF" +
            "ault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.NotificationDTO[] GetNotifications(ThinClient.SCS.Session session, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetGroup", ReplyAction="http://tempuri.org/IControllerService/GetGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetGroupControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.GroupDTO GetGroup(ThinClient.SCS.Session session, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetSpecialization", ReplyAction="http://tempuri.org/IControllerService/GetSpecializationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetSpecializationControllerServiceException" +
            "Fault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.SpecializationDTO GetSpecialization(ThinClient.SCS.Session session, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetCathedra", ReplyAction="http://tempuri.org/IControllerService/GetCathedraResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetCathedraControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.CathedraDTO GetCathedra(ThinClient.SCS.Session session, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetFaculty", ReplyAction="http://tempuri.org/IControllerService/GetFacultyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetFacultyControllerServiceExceptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.FacultyDTO GetFaculty(ThinClient.SCS.Session session, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetInstitute", ReplyAction="http://tempuri.org/IControllerService/GetInstituteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetInstituteControllerServiceExceptionFault" +
            "", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.InstituteDTO GetInstitute(ThinClient.SCS.Session session, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetVisitingsForLecture", ReplyAction="http://tempuri.org/IControllerService/GetVisitingsForLectureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetVisitingsForLectureControllerServiceExce" +
            "ptionFault", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.VisitingsDTO[] GetVisitingsForLecture(ThinClient.SCS.Session session, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/GetControlById", ReplyAction="http://tempuri.org/IControllerService/GetControlByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/GetControlByIdControllerServiceExceptionFau" +
            "lt", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        ThinClient.SCS.ControlDTO GetControlById(ThinClient.SCS.Session session, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IControllerService/UpdateMarkValue", ReplyAction="http://tempuri.org/IControllerService/UpdateMarkValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ThinClient.SCS.ControllerServiceException), Action="http://tempuri.org/IControllerService/UpdateMarkValueControllerServiceExceptionFa" +
            "ult", Name="ControllerServiceException", Namespace="http://schemas.datacontract.org/2004/07/StudyingControllerService")]
        void UpdateMarkValue(ThinClient.SCS.Session session, int markId, decimal markValue);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IControllerServiceChannel : ThinClient.SCS.IControllerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ControllerServiceClient : System.ServiceModel.ClientBase<ThinClient.SCS.IControllerService>, ThinClient.SCS.IControllerService {
        
        public ControllerServiceClient() {
        }
        
        public ControllerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ControllerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ControllerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ControllerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ThinClient.SCS.Session Login(string login1, string password) {
            return base.Channel.Login(login1, password);
        }
        
        public ThinClient.SCS.InstituteDTO[] GetInstitutes(ThinClient.SCS.Session session) {
            return base.Channel.GetInstitutes(session);
        }
        
        public ThinClient.SCS.FacultyDTO[] GetAllFaculties(ThinClient.SCS.Session session) {
            return base.Channel.GetAllFaculties(session);
        }
        
        public ThinClient.SCS.FacultyDTO[] GetFaculties(ThinClient.SCS.Session session, System.Nullable<int> instituteID) {
            return base.Channel.GetFaculties(session, instituteID);
        }
        
        public ThinClient.SCS.CathedraDTO[] GetAllCathedras(ThinClient.SCS.Session session) {
            return base.Channel.GetAllCathedras(session);
        }
        
        public ThinClient.SCS.CathedraDTO[] GetCathedras(ThinClient.SCS.Session session, int facultyID) {
            return base.Channel.GetCathedras(session, facultyID);
        }
        
        public ThinClient.SCS.GroupDTO[] GetGroups(ThinClient.SCS.Session session, int cathedraID) {
            return base.Channel.GetGroups(session, cathedraID);
        }
        
        public ThinClient.SCS.GroupDTO[] GetAllGroups(ThinClient.SCS.Session session) {
            return base.Channel.GetAllGroups(session);
        }
        
        public void SaveInstitute(ThinClient.SCS.Session session, ThinClient.SCS.InstituteDTO institute) {
            base.Channel.SaveInstitute(session, institute);
        }
        
        public void SaveFaculty(ThinClient.SCS.Session session, ThinClient.SCS.FacultyDTO faculty) {
            base.Channel.SaveFaculty(session, faculty);
        }
        
        public void SaveCathedra(ThinClient.SCS.Session session, ThinClient.SCS.CathedraDTO cathedra) {
            base.Channel.SaveCathedra(session, cathedra);
        }
        
        public void SaveGroup(ThinClient.SCS.Session session, ThinClient.SCS.GroupDTO group) {
            base.Channel.SaveGroup(session, group);
        }
        
        public ThinClient.SCS.SystemUserDTO[] GetUsers(ThinClient.SCS.Session session, ThinClient.SCS.UserRoles roles) {
            return base.Channel.GetUsers(session, roles);
        }
        
        public void SaveUser(ThinClient.SCS.Session session, ThinClient.SCS.SystemUserDTO user) {
            base.Channel.SaveUser(session, user);
        }
        
        public ThinClient.SCS.SpecializationDTO[] GetSpecializations(ThinClient.SCS.Session session, int facultyID) {
            return base.Channel.GetSpecializations(session, facultyID);
        }
        
        public void DeleteInstitute(ThinClient.SCS.Session session, int instituteID) {
            base.Channel.DeleteInstitute(session, instituteID);
        }
        
        public void DeleteFaculty(ThinClient.SCS.Session session, int facultyID) {
            base.Channel.DeleteFaculty(session, facultyID);
        }
        
        public void DeleteCathedra(ThinClient.SCS.Session session, int cathedraID) {
            base.Channel.DeleteCathedra(session, cathedraID);
        }
        
        public void DeleteGroup(ThinClient.SCS.Session session, int groupID) {
            base.Channel.DeleteGroup(session, groupID);
        }
        
        public void DeleteUser(ThinClient.SCS.Session session, int userID) {
            base.Channel.DeleteUser(session, userID);
        }
        
        public ThinClient.SCS.GroupDTO GetGroupByID(ThinClient.SCS.Session session, System.Nullable<int> groupID) {
            return base.Channel.GetGroupByID(session, groupID);
        }
        
        public ThinClient.SCS.SpecializationDTO GetSpecializationByID(ThinClient.SCS.Session session, System.Nullable<int> specializationID) {
            return base.Channel.GetSpecializationByID(session, specializationID);
        }
        
        public ThinClient.SCS.LectureDTO[] GetLectures(ThinClient.SCS.Session session, int teacherID) {
            return base.Channel.GetLectures(session, teacherID);
        }
        
        public ThinClient.SCS.GroupDTO[] GetLectureGroups(ThinClient.SCS.Session session, int lectureID) {
            return base.Channel.GetLectureGroups(session, lectureID);
        }
        
        public ThinClient.SCS.TeacherDTO[] GetTeachers(ThinClient.SCS.Session session, int cathedraID) {
            return base.Channel.GetTeachers(session, cathedraID);
        }
        
        public ThinClient.SCS.SubjectDTO[] GetSubjects(ThinClient.SCS.Session session, int cathedraID) {
            return base.Channel.GetSubjects(session, cathedraID);
        }
        
        public void SaveLecture(ThinClient.SCS.Session session, ThinClient.SCS.LectureDTO lecture) {
            base.Channel.SaveLecture(session, lecture);
        }
        
        public void SaveTeacherSubjects(ThinClient.SCS.Session session, int teacherID, ThinClient.SCS.SubjectDTO[] subjects) {
            base.Channel.SaveTeacherSubjects(session, teacherID, subjects);
        }
        
        public ThinClient.SCS.PracticeTeacherDTO[] GetPracticesTeacher(ThinClient.SCS.Session session, int teacherID) {
            return base.Channel.GetPracticesTeacher(session, teacherID);
        }
        
        public ThinClient.SCS.GroupDTO[] GetGroupsPractice(ThinClient.SCS.Session session, int practiceTeacherID) {
            return base.Channel.GetGroupsPractice(session, practiceTeacherID);
        }
        
        public ThinClient.SCS.SubjectDTO[] GetTeacherPracticeSubjects(ThinClient.SCS.Session session, int teacherID) {
            return base.Channel.GetTeacherPracticeSubjects(session, teacherID);
        }
        
        public ThinClient.SCS.StudentDTO[] GetAllStudents(ThinClient.SCS.Session session) {
            return base.Channel.GetAllStudents(session);
        }
        
        public ThinClient.SCS.StudentDTO[] GetGroupStudents(ThinClient.SCS.Session session, int groupID) {
            return base.Channel.GetGroupStudents(session, groupID);
        }
        
        public ThinClient.SCS.StudentDTO[] GetCathedraStudents(ThinClient.SCS.Session session, int cathedraID) {
            return base.Channel.GetCathedraStudents(session, cathedraID);
        }
        
        public ThinClient.SCS.StudentDTO[] GetFacultyStudents(ThinClient.SCS.Session session, int facultyID) {
            return base.Channel.GetFacultyStudents(session, facultyID);
        }
        
        public ThinClient.SCS.StudentDTO[] GetInstituteStudents(ThinClient.SCS.Session session, int instituteID) {
            return base.Channel.GetInstituteStudents(session, instituteID);
        }
        
        public void SavePracticeTeacher(ThinClient.SCS.Session session, ThinClient.SCS.PracticeTeacherDTO practiceTeacher) {
            base.Channel.SavePracticeTeacher(session, practiceTeacher);
        }
        
        public ThinClient.SCS.GroupDTO[] GetFacultyGroups(ThinClient.SCS.Session session, int facultyID) {
            return base.Channel.GetFacultyGroups(session, facultyID);
        }
        
        public ThinClient.SCS.GroupDTO[] GetInstituteGroups(ThinClient.SCS.Session session, int instituteID) {
            return base.Channel.GetInstituteGroups(session, instituteID);
        }
        
        public void SavePracticeTeacherSubjects(ThinClient.SCS.Session session, int teacherID, ThinClient.SCS.SubjectDTO[] subjects) {
            base.Channel.SavePracticeTeacherSubjects(session, teacherID, subjects);
        }
        
        public ThinClient.SCS.TeacherDTO GetTeacher(ThinClient.SCS.Session session, int teacherID) {
            return base.Channel.GetTeacher(session, teacherID);
        }
        
        public ThinClient.SCS.InstituteDTO GetInstituteByID(ThinClient.SCS.Session session, System.Nullable<int> instituteID) {
            return base.Channel.GetInstituteByID(session, instituteID);
        }
        
        public ThinClient.SCS.FacultyDTO GetFacultyByID(ThinClient.SCS.Session session, int facultyID) {
            return base.Channel.GetFacultyByID(session, facultyID);
        }
        
        public ThinClient.SCS.CathedraDTO GetCathedraByID(ThinClient.SCS.Session session, int cathedraID) {
            return base.Channel.GetCathedraByID(session, cathedraID);
        }
        
        public ThinClient.SCS.LectureControlDTO[] GetLectureControls(ThinClient.SCS.Session session, int lectureID) {
            return base.Channel.GetLectureControls(session, lectureID);
        }
        
        public void SaveLectureControls(ThinClient.SCS.Session session, int lectureID, ThinClient.SCS.LectureControlDTO[] controls) {
            base.Channel.SaveLectureControls(session, lectureID, controls);
        }
        
        public ThinClient.SCS.PracticeControlDTO[] GetPracticeControls(ThinClient.SCS.Session session, int practiceID) {
            return base.Channel.GetPracticeControls(session, practiceID);
        }
        
        public void SavePracticeControls(ThinClient.SCS.Session session, int practiceID, ThinClient.SCS.PracticeControlDTO[] controls) {
            base.Channel.SavePracticeControls(session, practiceID, controls);
        }
        
        public ThinClient.SCS.ControlMessageDTO[] GetControlMessages(ThinClient.SCS.Session session, int controlID) {
            return base.Channel.GetControlMessages(session, controlID);
        }
        
        public void SaveControlMessage(ThinClient.SCS.Session session, ThinClient.SCS.ControlMessageDTO message) {
            base.Channel.SaveControlMessage(session, message);
        }
        
        public void SaveLectureControl(ThinClient.SCS.Session session, ThinClient.SCS.LectureControlDTO control) {
            base.Channel.SaveLectureControl(session, control);
        }
        
        public ThinClient.SCS.LectureDTO[] GetStudentLectures(ThinClient.SCS.Session session, int studentID) {
            return base.Channel.GetStudentLectures(session, studentID);
        }
        
        public ThinClient.SCS.AttachmentDTO[] GetAttachments(ThinClient.SCS.Session session, int teacherID) {
            return base.Channel.GetAttachments(session, teacherID);
        }
        
        public void SaveAttachments(ThinClient.SCS.Session session, int userID, ThinClient.SCS.AttachmentDTO[] attachments) {
            base.Channel.SaveAttachments(session, userID, attachments);
        }
        
        public void DeleteAttachment(ThinClient.SCS.Session session, int attachmentID) {
            base.Channel.DeleteAttachment(session, attachmentID);
        }
        
        public decimal GetLectureMark(ThinClient.SCS.Session session, int studentID, int controlID) {
            return base.Channel.GetLectureMark(session, studentID, controlID);
        }
        
        public decimal GetPracticeMark(ThinClient.SCS.Session session, int studentID, int controlID) {
            return base.Channel.GetPracticeMark(session, studentID, controlID);
        }
        
        public void SavePracticeControl(ThinClient.SCS.Session session, ThinClient.SCS.PracticeControlDTO control) {
            base.Channel.SavePracticeControl(session, control);
        }
        
        public ThinClient.SCS.PracticeTeacherDTO[] GetStudentPractices(ThinClient.SCS.Session session, int studentID) {
            return base.Channel.GetStudentPractices(session, studentID);
        }
        
        public ThinClient.SCS.MarkDTO[] GetMarks(ThinClient.SCS.Session session, ThinClient.SCS.ControlDTO control) {
            return base.Channel.GetMarks(session, control);
        }
        
        public void SaveMarks(ThinClient.SCS.Session session, ThinClient.SCS.ControlDTO control, ThinClient.SCS.MarkDTO[] marks) {
            base.Channel.SaveMarks(session, control, marks);
        }
        
        public ThinClient.SCS.UserRateItemDTO[] GetStudentRateList(ThinClient.SCS.Session session, ThinClient.SCS.BaseEntityDTO universityStructureItem) {
            return base.Channel.GetStudentRateList(session, universityStructureItem);
        }
        
        public ThinClient.SCS.NotificationDTO[] GetNotifications(ThinClient.SCS.Session session, int userID) {
            return base.Channel.GetNotifications(session, userID);
        }
        
        public ThinClient.SCS.GroupDTO GetGroup(ThinClient.SCS.Session session, int id) {
            return base.Channel.GetGroup(session, id);
        }
        
        public ThinClient.SCS.SpecializationDTO GetSpecialization(ThinClient.SCS.Session session, int id) {
            return base.Channel.GetSpecialization(session, id);
        }
        
        public ThinClient.SCS.CathedraDTO GetCathedra(ThinClient.SCS.Session session, int id) {
            return base.Channel.GetCathedra(session, id);
        }
        
        public ThinClient.SCS.FacultyDTO GetFaculty(ThinClient.SCS.Session session, int id) {
            return base.Channel.GetFaculty(session, id);
        }
        
        public ThinClient.SCS.InstituteDTO GetInstitute(ThinClient.SCS.Session session, int id) {
            return base.Channel.GetInstitute(session, id);
        }
        
        public ThinClient.SCS.VisitingsDTO[] GetVisitingsForLecture(ThinClient.SCS.Session session, int id) {
            return base.Channel.GetVisitingsForLecture(session, id);
        }
        
        public ThinClient.SCS.ControlDTO GetControlById(ThinClient.SCS.Session session, int id) {
            return base.Channel.GetControlById(session, id);
        }
        
        public void UpdateMarkValue(ThinClient.SCS.Session session, int markId, decimal markValue) {
            base.Channel.UpdateMarkValue(session, markId, markValue);
        }
    }
}
